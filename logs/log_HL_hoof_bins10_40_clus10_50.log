############################################################
No. of training videos : 16
Size : [4404, 4353, 4036, 4302, 4579, 4497, 4451, 4499, 5057, 4497, 4450, 4473, 4231, 4489, 5046, 4449]
nbins : 10, nClusters : 10 
Loading features from disk...
------------------------------------------------------------
1. v_file ::  ICC WT20 - Afghanistan vs South Africa - Match Highlights
------------------------------------------------------------
2. v_file ::  ICC WT20 - England v Sri Lanka Match Highlights
------------------------------------------------------------
3. v_file ::  ICC WT20 - India vs Australia Highlights
------------------------------------------------------------
4. v_file ::  ICC WT20 - India vs Pakistan Match Highlights
------------------------------------------------------------
5. v_file ::  ICC WT20 - South Africa vs England - Match Highlights
------------------------------------------------------------
6. v_file ::  ICC WT20 Afghanistan vs Zimbabwe Match Highlights
------------------------------------------------------------
7. v_file ::  ICC WT20 Australia vs Bangladesh - Match Highlights
------------------------------------------------------------
8. v_file ::  ICC WT20 Bangladesh v Ireland Match Highlights
------------------------------------------------------------
9. v_file ::  ICC WT20 Bangladesh vs Netherlands Highlights
------------------------------------------------------------
10. v_file ::  ICC WT20 Bangladesh vs Oman Match Highlights
------------------------------------------------------------
11. v_file ::  ICC WT20 England v New Zealand - Semi-Final Highlights
------------------------------------------------------------
12. v_file ::  ICC WT20 Final - England vs West Indies - Match Highlights
------------------------------------------------------------
13. v_file ::  ICC WT20 Hong Kong v Afghanistan Match Highlights
------------------------------------------------------------
14. v_file ::  ICC WT20 Hong Kong v Scotland Highlights
------------------------------------------------------------
15. v_file ::  ICC WT20 Hong Kong vs Zimbabwe Highlights
------------------------------------------------------------
16. v_file ::  ICC WT20 India vs Bangladesh - Match Highlights
INP_VEC_SIZE =  10
Clustering using KMeans: Input size -> (45630, 10) :: n_clusters -> 10
Done Clustering!
Create a dataframe for HOOF features...
Make bow vector for each feature vector
Shape of bovw_dataframe : (351, 10)
Saved IDF weights to disk.
Read 562 ground truth stroke labels from file.
Training stroke labels : 
[0 2 1 0 2 1 0 2 0 2 0 2 0 1 2 2 1 0 0 2 0 2 2 2 2 2 1 1 0 1 2 1 2 0 1 2 0
 1 2 2 0 1 1 0 1 2 1 1 0 2 1 1 2 2 2 1 0 2 2 1 0 1 2 2 0 0 1 1 0 1 0 1 1 0
 0 0 1 1 1 2 2 1 1 2 2 1 0 0 0 1 1 1 0 1 0 1 0 1 2 1 0 0 0 0 2 1 2 0 0 2 0
 2 1 1 1 1 2 0 0 1 2 1 1 1 2 1 2 1 2 1 2 1 1 2 2 1 1 2 0 1 1 2 2 1 1 0 0 1
 1 2 1 1 0 1 1 1 0 2 1 2 2 0 1 1 2 1 0 0 2 1 1 0 1 0 0 2 2 1 1 0 0 2 1 2 1
 0 0 2 2 0 0 1 0 0 1 2 2 1 2 0 1 1 0 0 2 2 1 2 0 2 0 1 0 1 0 2 0 0 2 0 2 0
 0 0 2 1 2 1 0 0 0 2 1 2 0 0 1 1 1 2 2 1 2 1 2 1 1 1 1 2 1 0 0 2 1 1 2 2 1
 0 1 1 0 1 0 0 2 1 2 2 2 1 0 1 1 1 0 0 2 1 2 1 0 0 2 1 0 2 0 0 0 1 1 0 1 0
 0 0 2 1 1 1 0 1 1 0 1 0 1 2 1 1 0 1 0 1 1 1 1 1 2 2 0 1 1 1 0 1 0 0 1 2 2
 1 0 1 0 2 1 1 2 2 2 0 2 0 2 0 1 1 2]
(351,)
............................................................................................................................................................................................................................................................................................................
optimization finished, #iter = 3000

WARNING: reaching max number of iterations
Using -s 2 may be faster (also see FAQ)

Objective value = -109.639324
nSV = 171
............................................................................................................................................................................................................................................................................................................
optimization finished, #iter = 3000

WARNING: reaching max number of iterations
Using -s 2 may be faster (also see FAQ)

Objective value = -96.376842
nSV = 169
............................................................................................................................................................................................................................................................................................................
optimization finished, #iter = 3000

WARNING: reaching max number of iterations
Using -s 2 may be faster (also see FAQ)

Objective value = -135.042631
nSV = 203
/home/arpan/opencv-py3/lib/python3.5/site-packages/sklearn/svm/base.py:931: ConvergenceWarning: Liblinear failed to converge, increase the number of iterations.
  "the number of iterations.", ConvergenceWarning)
[LibLinear]Training dataframe formed.
LDA execution !!! 
printing dictionary after corp  Dictionary(10 unique tokens: ['6', '1', '8', '5', '3']...) 
training complete saving to disk 
0 : ['0.280*"4" ', ' 0.234*"3" ', ' 0.224*"5" ', ' 0.099*"6" ', ' 0.089*"1" ', ' 0.047*"0" ', ' 0.019*"8" ', ' 0.004*"7" ', ' 0.002*"9" ', ' 0.001*"2"'] 
1 : ['0.249*"5" ', ' 0.187*"2" ', ' 0.168*"9" ', ' 0.151*"8" ', ' 0.143*"1" ', ' 0.058*"0" ', ' 0.013*"3" ', ' 0.012*"4" ', ' 0.009*"6" ', ' 0.009*"7"'] 
2 : ['0.320*"1" ', ' 0.203*"5" ', ' 0.155*"0" ', ' 0.093*"7" ', ' 0.072*"4" ', ' 0.066*"8" ', ' 0.031*"9" ', ' 0.029*"6" ', ' 0.027*"3" ', ' 0.006*"2"'] 
Training Time : topic action mapping is : 
topic0  topic1  topic2
[[ 0.42814258 88.7290287   3.05861464]
 [85.22501695  8.67171142  9.00407445]
 [ 6.92787725 21.53140119 47.50216478]]
Max Acc. :  0.7834757834757835
Acc values :  [0.21367521367521367, 0.13105413105413105, 0.7834757834757835, 0.42165242165242167, 0.3646723646723647, 0.08547008547008547]
Acc values :  [[1, 13, 61], [1, 15, 30], [102, 112, 61], [6, 112, 30], [102, 15, 11], [6, 13, 11]]
perm_tuples :  [(0, 1, 2), (0, 2, 1), (1, 0, 2), (1, 2, 0), (2, 0, 1), (2, 1, 0)]
------------------------------------------------------------
1. v_file ::  ICC WT20 Ireland v Oman Match Highlights
------------------------------------------------------------
2. v_file ::  ICC WT20 Ireland vs Oman Highlights
------------------------------------------------------------
3. v_file ::  ICC WT20 Netherlands vs Ireland Match Highlights
------------------------------------------------------------
4. v_file ::  ICC WT20 New Zealand vs Pakistan - Match Highlights
------------------------------------------------------------
5. v_file ::  ICC WT20 Scotland vs Afghanistan Highlights
Create dataframe BOVW validation set...
Make bow vector for each feature vector
Shape of bovw_dataframe : (105, 10)
Reading IDF weights to disk.
[[ 1.48973531  6.28410664 16.12867868]
 [14.76953474  5.18579161  2.30946475]
 [ 5.90348983  1.10696059 10.3112604 ]]
Evaluating on the validation set...
##############################
BOW Classification Results:
92/105 Correct
Accuracy = 0.8761904761904762 
Confusion matrix
[[34.  0.  3.]
 [ 0. 37.  3.]
 [ 5.  2. 21.]]
############################################################
No. of training videos : 16
Size : [4404, 4353, 4036, 4302, 4579, 4497, 4451, 4499, 5057, 4497, 4450, 4473, 4231, 4489, 5046, 4449]
nbins : 10, nClusters : 20 
Loading features from disk...
------------------------------------------------------------
1. v_file ::  ICC WT20 - Afghanistan vs South Africa - Match Highlights
------------------------------------------------------------
2. v_file ::  ICC WT20 - England v Sri Lanka Match Highlights
------------------------------------------------------------
3. v_file ::  ICC WT20 - India vs Australia Highlights
------------------------------------------------------------
4. v_file ::  ICC WT20 - India vs Pakistan Match Highlights
------------------------------------------------------------
5. v_file ::  ICC WT20 - South Africa vs England - Match Highlights
------------------------------------------------------------
6. v_file ::  ICC WT20 Afghanistan vs Zimbabwe Match Highlights
------------------------------------------------------------
7. v_file ::  ICC WT20 Australia vs Bangladesh - Match Highlights
------------------------------------------------------------
8. v_file ::  ICC WT20 Bangladesh v Ireland Match Highlights
------------------------------------------------------------
9. v_file ::  ICC WT20 Bangladesh vs Netherlands Highlights
------------------------------------------------------------
10. v_file ::  ICC WT20 Bangladesh vs Oman Match Highlights
------------------------------------------------------------
11. v_file ::  ICC WT20 England v New Zealand - Semi-Final Highlights
------------------------------------------------------------
12. v_file ::  ICC WT20 Final - England vs West Indies - Match Highlights
------------------------------------------------------------
13. v_file ::  ICC WT20 Hong Kong v Afghanistan Match Highlights
------------------------------------------------------------
14. v_file ::  ICC WT20 Hong Kong v Scotland Highlights
------------------------------------------------------------
15. v_file ::  ICC WT20 Hong Kong vs Zimbabwe Highlights
------------------------------------------------------------
16. v_file ::  ICC WT20 India vs Bangladesh - Match Highlights
INP_VEC_SIZE =  10
Clustering using KMeans: Input size -> (45630, 10) :: n_clusters -> 20
Done Clustering!
Create a dataframe for HOOF features...
Make bow vector for each feature vector
Shape of bovw_dataframe : (351, 20)
Saved IDF weights to disk.
Read 562 ground truth stroke labels from file.
Training stroke labels : 
[0 2 1 0 2 1 0 2 0 2 0 2 0 1 2 2 1 0 0 2 0 2 2 2 2 2 1 1 0 1 2 1 2 0 1 2 0
 1 2 2 0 1 1 0 1 2 1 1 0 2 1 1 2 2 2 1 0 2 2 1 0 1 2 2 0 0 1 1 0 1 0 1 1 0
 0 0 1 1 1 2 2 1 1 2 2 1 0 0 0 1 1 1 0 1 0 1 0 1 2 1 0 0 0 0 2 1 2 0 0 2 0
 2 1 1 1 1 2 0 0 1 2 1 1 1 2 1 2 1 2 1 2 1 1 2 2 1 1 2 0 1 1 2 2 1 1 0 0 1
 1 2 1 1 0 1 1 1 0 2 1 2 2 0 1 1 2 1 0 0 2 1 1 0 1 0 0 2 2 1 1 0 0 2 1 2 1
 0 0 2 2 0 0 1 0 0 1 2 2 1 2 0 1 1 0 0 2 2 1 2 0 2 0 1 0 1 0 2 0 0 2 0 2 0
 0 0 2 1 2 1 0 0 0 2 1 2 0 0 1 1 1 2 2 1 2 1 2 1 1 1 1 2 1 0 0 2 1 1 2 2 1
 0 1 1 0 1 0 0 2 1 2 2 2 1 0 1 1 1 0 0 2 1 2 1 0 0 2 1 0 2 0 0 0 1 1 0 1 0
 0 0 2 1 1 1 0 1 1 0 1 0 1 2 1 1 0 1 0 1 1 1 1 1 2 2 0 1 1 1 0 1 0 0 1 2 2
 1 0 1 0 2 1 1 2 2 2 0 2 0 2 0 1 1 2]
(351,)
............................................................................................................................................................................................................................................................................................................
optimization finished, #iter = 3000

WARNING: reaching max number of iterations
Using -s 2 may be faster (also see FAQ)

Objective value = -84.504609
nSV = 136
............................................................................................................................................................................................................................................................................................................
optimization finished, #iter = 3000

WARNING: reaching max number of iterations
Using -s 2 may be faster (also see FAQ)

Objective value = -76.536221
nSV = 132
............................................................................................................................................................................................................................................................................................................
optimization finished, #iter = 3000

WARNING: reaching max number of iterations
Using -s 2 may be faster (also see FAQ)

Objective value = -110.756549
nSV = 172
/home/arpan/opencv-py3/lib/python3.5/site-packages/sklearn/svm/base.py:931: ConvergenceWarning: Liblinear failed to converge, increase the number of iterations.
  "the number of iterations.", ConvergenceWarning)
[LibLinear]Training dataframe formed.
LDA execution !!! 
printing dictionary after corp  Dictionary(20 unique tokens: ['13', '12', '19', '18', '0']...) 
training complete saving to disk 
0 : ['0.142*"3" ', ' 0.132*"0" ', ' 0.128*"17" ', ' 0.102*"11" ', ' 0.090*"18" ', ' 0.083*"6" ', ' 0.074*"19" ', ' 0.054*"12" ', ' 0.052*"7" ', ' 0.028*"13"'] 
1 : ['0.174*"9" ', ' 0.130*"4" ', ' 0.105*"17" ', ' 0.091*"3" ', ' 0.082*"19" ', ' 0.076*"0" ', ' 0.065*"6" ', ' 0.059*"7" ', ' 0.054*"15" ', ' 0.038*"14"'] 
2 : ['0.186*"8" ', ' 0.137*"5" ', ' 0.116*"17" ', ' 0.080*"2" ', ' 0.072*"3" ', ' 0.069*"16" ', ' 0.065*"13" ', ' 0.060*"0" ', ' 0.060*"10" ', ' 0.046*"1"'] 
Training Time : topic action mapping is : 
topic0  topic1  topic2
[[16.93767992 69.40479872  0.63767076]
 [10.27141723  3.41959858 96.94115475]
 [58.96771175  7.32632741 13.11872774]]
Max Acc. :  0.7720797720797721
Acc values :  [0.1452991452991453, 0.45014245014245013, 0.33048433048433046, 0.08262108262108261, 0.7720797720797721, 0.21937321937321938]
Acc values :  [[27, 5, 19], [27, 119, 12], [81, 16, 19], [1, 16, 12], [81, 119, 71], [1, 5, 71]]
perm_tuples :  [(0, 1, 2), (0, 2, 1), (1, 0, 2), (1, 2, 0), (2, 0, 1), (2, 1, 0)]
------------------------------------------------------------
1. v_file ::  ICC WT20 Ireland v Oman Match Highlights
------------------------------------------------------------
2. v_file ::  ICC WT20 Ireland vs Oman Highlights
------------------------------------------------------------
3. v_file ::  ICC WT20 Netherlands vs Ireland Match Highlights
------------------------------------------------------------
4. v_file ::  ICC WT20 New Zealand vs Pakistan - Match Highlights
------------------------------------------------------------
5. v_file ::  ICC WT20 Scotland vs Afghanistan Highlights
Create dataframe BOVW validation set...
Make bow vector for each feature vector
Shape of bovw_dataframe : (105, 20)
Reading IDF weights to disk.
[[12.72794214  0.97678286 11.4170593 ]
 [ 3.41770434 16.81761223  6.11705562]
 [ 6.51932028  5.75445628  3.96664736]]
Evaluating on the validation set...
##############################
BOW Classification Results:
95/105 Correct
Accuracy = 0.9047619047619048 
Confusion matrix
[[34.  0.  0.]
 [ 0. 37.  3.]
 [ 5.  2. 24.]]
############################################################
No. of training videos : 16
Size : [4404, 4353, 4036, 4302, 4579, 4497, 4451, 4499, 5057, 4497, 4450, 4473, 4231, 4489, 5046, 4449]
nbins : 10, nClusters : 30 
Loading features from disk...
------------------------------------------------------------
1. v_file ::  ICC WT20 - Afghanistan vs South Africa - Match Highlights
------------------------------------------------------------
2. v_file ::  ICC WT20 - England v Sri Lanka Match Highlights
------------------------------------------------------------
3. v_file ::  ICC WT20 - India vs Australia Highlights
------------------------------------------------------------
4. v_file ::  ICC WT20 - India vs Pakistan Match Highlights
------------------------------------------------------------
5. v_file ::  ICC WT20 - South Africa vs England - Match Highlights
------------------------------------------------------------
6. v_file ::  ICC WT20 Afghanistan vs Zimbabwe Match Highlights
------------------------------------------------------------
7. v_file ::  ICC WT20 Australia vs Bangladesh - Match Highlights
------------------------------------------------------------
8. v_file ::  ICC WT20 Bangladesh v Ireland Match Highlights
------------------------------------------------------------
9. v_file ::  ICC WT20 Bangladesh vs Netherlands Highlights
------------------------------------------------------------
10. v_file ::  ICC WT20 Bangladesh vs Oman Match Highlights
------------------------------------------------------------
11. v_file ::  ICC WT20 England v New Zealand - Semi-Final Highlights
------------------------------------------------------------
12. v_file ::  ICC WT20 Final - England vs West Indies - Match Highlights
------------------------------------------------------------
13. v_file ::  ICC WT20 Hong Kong v Afghanistan Match Highlights
------------------------------------------------------------
14. v_file ::  ICC WT20 Hong Kong v Scotland Highlights
------------------------------------------------------------
15. v_file ::  ICC WT20 Hong Kong vs Zimbabwe Highlights
------------------------------------------------------------
16. v_file ::  ICC WT20 India vs Bangladesh - Match Highlights
INP_VEC_SIZE =  10
Clustering using KMeans: Input size -> (45630, 10) :: n_clusters -> 30
Done Clustering!
Create a dataframe for HOOF features...
Make bow vector for each feature vector
Shape of bovw_dataframe : (351, 30)
Saved IDF weights to disk.
Read 562 ground truth stroke labels from file.
Training stroke labels : 
[0 2 1 0 2 1 0 2 0 2 0 2 0 1 2 2 1 0 0 2 0 2 2 2 2 2 1 1 0 1 2 1 2 0 1 2 0
 1 2 2 0 1 1 0 1 2 1 1 0 2 1 1 2 2 2 1 0 2 2 1 0 1 2 2 0 0 1 1 0 1 0 1 1 0
 0 0 1 1 1 2 2 1 1 2 2 1 0 0 0 1 1 1 0 1 0 1 0 1 2 1 0 0 0 0 2 1 2 0 0 2 0
 2 1 1 1 1 2 0 0 1 2 1 1 1 2 1 2 1 2 1 2 1 1 2 2 1 1 2 0 1 1 2 2 1 1 0 0 1
 1 2 1 1 0 1 1 1 0 2 1 2 2 0 1 1 2 1 0 0 2 1 1 0 1 0 0 2 2 1 1 0 0 2 1 2 1
 0 0 2 2 0 0 1 0 0 1 2 2 1 2 0 1 1 0 0 2 2 1 2 0 2 0 1 0 1 0 2 0 0 2 0 2 0
 0 0 2 1 2 1 0 0 0 2 1 2 0 0 1 1 1 2 2 1 2 1 2 1 1 1 1 2 1 0 0 2 1 1 2 2 1
 0 1 1 0 1 0 0 2 1 2 2 2 1 0 1 1 1 0 0 2 1 2 1 0 0 2 1 0 2 0 0 0 1 1 0 1 0
 0 0 2 1 1 1 0 1 1 0 1 0 1 2 1 1 0 1 0 1 1 1 1 1 2 2 0 1 1 1 0 1 0 0 1 2 2
 1 0 1 0 2 1 1 2 2 2 0 2 0 2 0 1 1 2]
(351,)
............................................................................................................................................................................................................................................................................................................
optimization finished, #iter = 3000

WARNING: reaching max number of iterations
Using -s 2 may be faster (also see FAQ)

Objective value = -60.182150
nSV = 100
............................................................................................................................................................................................................................................................................................................
optimization finished, #iter = 3000

WARNING: reaching max number of iterations
Using -s 2 may be faster (also see FAQ)

Objective value = -73.607218
nSV = 124
............................................................................................................................................................................................................................................................................................................
optimization finished, #iter = 3000

WARNING: reaching max number of iterations
Using -s 2 may be faster (also see FAQ)

Objective value = -106.899809
nSV = 161
/home/arpan/opencv-py3/lib/python3.5/site-packages/sklearn/svm/base.py:931: ConvergenceWarning: Liblinear failed to converge, increase the number of iterations.
  "the number of iterations.", ConvergenceWarning)
[LibLinear]Training dataframe formed.
LDA execution !!! 
printing dictionary after corp  Dictionary(30 unique tokens: ['12', '0', '5', '15', '24']...) 
training complete saving to disk 
0 : ['0.101*"7" ', ' 0.089*"0" ', ' 0.086*"6" ', ' 0.071*"24" ', ' 0.067*"22" ', ' 0.063*"21" ', ' 0.056*"27" ', ' 0.048*"10" ', ' 0.048*"1" ', ' 0.047*"14"'] 
1 : ['0.083*"22" ', ' 0.077*"29" ', ' 0.075*"26" ', ' 0.073*"10" ', ' 0.067*"23" ', ' 0.065*"4" ', ' 0.058*"15" ', ' 0.053*"6" ', ' 0.047*"9" ', ' 0.046*"16"'] 
2 : ['0.154*"28" ', ' 0.115*"19" ', ' 0.077*"2" ', ' 0.071*"6" ', ' 0.071*"3" ', ' 0.061*"22" ', ' 0.049*"20" ', ' 0.043*"17" ', ' 0.042*"8" ', ' 0.039*"16"'] 
Training Time : topic action mapping is : 
topic0  topic1  topic2
[[82.95015612  6.10756728  0.        ]
 [ 6.10061473 15.3084065  86.61039892]
 [20.04258236 51.67238653  6.56524909]]
Max Acc. :  0.7692307692307693
Acc values :  [0.3732193732193732, 0.7692307692307693, 0.08262108262108261, 0.21082621082621084, 0.41595441595441596, 0.14814814814814814]
Acc values :  [[98, 24, 9], [98, 107, 65], [11, 9, 9], [0, 9, 65], [11, 107, 28], [0, 24, 28]]
perm_tuples :  [(0, 1, 2), (0, 2, 1), (1, 0, 2), (1, 2, 0), (2, 0, 1), (2, 1, 0)]
------------------------------------------------------------
1. v_file ::  ICC WT20 Ireland v Oman Match Highlights
------------------------------------------------------------
2. v_file ::  ICC WT20 Ireland vs Oman Highlights
------------------------------------------------------------
3. v_file ::  ICC WT20 Netherlands vs Ireland Match Highlights
------------------------------------------------------------
4. v_file ::  ICC WT20 New Zealand vs Pakistan - Match Highlights
------------------------------------------------------------
5. v_file ::  ICC WT20 Scotland vs Afghanistan Highlights
Create dataframe BOVW validation set...
Make bow vector for each feature vector
Shape of bovw_dataframe : (105, 30)
Reading IDF weights to disk.
[[13.9198426   8.08032542  1.93082178]
 [ 8.62657505  7.06846759  5.2986998 ]
 [ 5.35201705  7.72237748  2.64765355]]
Evaluating on the validation set...
##############################
BOW Classification Results:
90/105 Correct
Accuracy = 0.8571428571428571 
Confusion matrix
[[32.  1.  0.]
 [ 4. 33.  2.]
 [ 3.  5. 25.]]
############################################################
No. of training videos : 16
Size : [4404, 4353, 4036, 4302, 4579, 4497, 4451, 4499, 5057, 4497, 4450, 4473, 4231, 4489, 5046, 4449]
nbins : 10, nClusters : 40 
Loading features from disk...
------------------------------------------------------------
1. v_file ::  ICC WT20 - Afghanistan vs South Africa - Match Highlights
------------------------------------------------------------
2. v_file ::  ICC WT20 - England v Sri Lanka Match Highlights
------------------------------------------------------------
3. v_file ::  ICC WT20 - India vs Australia Highlights
------------------------------------------------------------
4. v_file ::  ICC WT20 - India vs Pakistan Match Highlights
------------------------------------------------------------
5. v_file ::  ICC WT20 - South Africa vs England - Match Highlights
------------------------------------------------------------
6. v_file ::  ICC WT20 Afghanistan vs Zimbabwe Match Highlights
------------------------------------------------------------
7. v_file ::  ICC WT20 Australia vs Bangladesh - Match Highlights
------------------------------------------------------------
8. v_file ::  ICC WT20 Bangladesh v Ireland Match Highlights
------------------------------------------------------------
9. v_file ::  ICC WT20 Bangladesh vs Netherlands Highlights
------------------------------------------------------------
10. v_file ::  ICC WT20 Bangladesh vs Oman Match Highlights
------------------------------------------------------------
11. v_file ::  ICC WT20 England v New Zealand - Semi-Final Highlights
------------------------------------------------------------
12. v_file ::  ICC WT20 Final - England vs West Indies - Match Highlights
------------------------------------------------------------
13. v_file ::  ICC WT20 Hong Kong v Afghanistan Match Highlights
------------------------------------------------------------
14. v_file ::  ICC WT20 Hong Kong v Scotland Highlights
------------------------------------------------------------
15. v_file ::  ICC WT20 Hong Kong vs Zimbabwe Highlights
------------------------------------------------------------
16. v_file ::  ICC WT20 India vs Bangladesh - Match Highlights
INP_VEC_SIZE =  10
Clustering using KMeans: Input size -> (45630, 10) :: n_clusters -> 40
Done Clustering!
Create a dataframe for HOOF features...
Make bow vector for each feature vector
Shape of bovw_dataframe : (351, 40)
Saved IDF weights to disk.
Read 562 ground truth stroke labels from file.
Training stroke labels : 
[0 2 1 0 2 1 0 2 0 2 0 2 0 1 2 2 1 0 0 2 0 2 2 2 2 2 1 1 0 1 2 1 2 0 1 2 0
 1 2 2 0 1 1 0 1 2 1 1 0 2 1 1 2 2 2 1 0 2 2 1 0 1 2 2 0 0 1 1 0 1 0 1 1 0
 0 0 1 1 1 2 2 1 1 2 2 1 0 0 0 1 1 1 0 1 0 1 0 1 2 1 0 0 0 0 2 1 2 0 0 2 0
 2 1 1 1 1 2 0 0 1 2 1 1 1 2 1 2 1 2 1 2 1 1 2 2 1 1 2 0 1 1 2 2 1 1 0 0 1
 1 2 1 1 0 1 1 1 0 2 1 2 2 0 1 1 2 1 0 0 2 1 1 0 1 0 0 2 2 1 1 0 0 2 1 2 1
 0 0 2 2 0 0 1 0 0 1 2 2 1 2 0 1 1 0 0 2 2 1 2 0 2 0 1 0 1 0 2 0 0 2 0 2 0
 0 0 2 1 2 1 0 0 0 2 1 2 0 0 1 1 1 2 2 1 2 1 2 1 1 1 1 2 1 0 0 2 1 1 2 2 1
 0 1 1 0 1 0 0 2 1 2 2 2 1 0 1 1 1 0 0 2 1 2 1 0 0 2 1 0 2 0 0 0 1 1 0 1 0
 0 0 2 1 1 1 0 1 1 0 1 0 1 2 1 1 0 1 0 1 1 1 1 1 2 2 0 1 1 1 0 1 0 0 1 2 2
 1 0 1 0 2 1 1 2 2 2 0 2 0 2 0 1 1 2]
(351,)
............................................................................................................................................................................................................................................................................................................
optimization finished, #iter = 3000

WARNING: reaching max number of iterations
Using -s 2 may be faster (also see FAQ)

Objective value = -55.054550
nSV = 99
............................................................................................................................................................................................................................................................................................................
optimization finished, #iter = 3000

WARNING: reaching max number of iterations
Using -s 2 may be faster (also see FAQ)

Objective value = -60.943415
nSV = 101
............................................................................................................................................................................................................................................................................................................
optimization finished, #iter = 3000

WARNING: reaching max number of iterations
Using -s 2 may be faster (also see FAQ)

Objective value = -100.012942
nSV = 148
/home/arpan/opencv-py3/lib/python3.5/site-packages/sklearn/svm/base.py:931: ConvergenceWarning: Liblinear failed to converge, increase the number of iterations.
  "the number of iterations.", ConvergenceWarning)
[LibLinear]Training dataframe formed.
LDA execution !!! 
printing dictionary after corp  Dictionary(40 unique tokens: ['12', '30', '8', '24', '34']...) 
training complete saving to disk 
0 : ['0.119*"7" ', ' 0.100*"5" ', ' 0.072*"26" ', ' 0.051*"10" ', ' 0.044*"22" ', ' 0.043*"38" ', ' 0.040*"30" ', ' 0.040*"19" ', ' 0.040*"8" ', ' 0.038*"28"'] 
1 : ['0.076*"10" ', ' 0.059*"23" ', ' 0.055*"22" ', ' 0.055*"31" ', ' 0.055*"1" ', ' 0.052*"2" ', ' 0.051*"14" ', ' 0.046*"20" ', ' 0.040*"39" ', ' 0.038*"17"'] 
2 : ['0.124*"4" ', ' 0.105*"32" ', ' 0.072*"24" ', ' 0.050*"10" ', ' 0.045*"2" ', ' 0.045*"23" ', ' 0.042*"35" ', ' 0.039*"0" ', ' 0.038*"21" ', ' 0.038*"37"'] 
Training Time : topic action mapping is : 
topic0  topic1  topic2
[[  0.55906188  20.54990685  65.28401229]
 [101.40773919   8.27435774   4.54790559]
 [  9.86681372  66.46881646   5.42747357]]
Max Acc. :  0.792022792022792
Acc values :  [0.06267806267806268, 0.24786324786324787, 0.45584045584045585, 0.792022792022792, 0.1452991452991453, 0.2962962962962963]
Acc values :  [[1, 12, 9], [1, 7, 79], [30, 121, 9], [78, 121, 79], [30, 7, 14], [78, 12, 14]]
perm_tuples :  [(0, 1, 2), (0, 2, 1), (1, 0, 2), (1, 2, 0), (2, 0, 1), (2, 1, 0)]
------------------------------------------------------------
1. v_file ::  ICC WT20 Ireland v Oman Match Highlights
------------------------------------------------------------
2. v_file ::  ICC WT20 Ireland vs Oman Highlights
------------------------------------------------------------
3. v_file ::  ICC WT20 Netherlands vs Ireland Match Highlights
------------------------------------------------------------
4. v_file ::  ICC WT20 New Zealand vs Pakistan - Match Highlights
------------------------------------------------------------
5. v_file ::  ICC WT20 Scotland vs Afghanistan Highlights
Create dataframe BOVW validation set...
Make bow vector for each feature vector
Shape of bovw_dataframe : (105, 40)
Reading IDF weights to disk.
[[ 7.22506446 15.40482846  0.84618527]
 [ 0.56421775 23.91217455  3.17581749]
 [ 2.75813353 14.53272271  0.        ]]
Evaluating on the validation set...
##############################
BOW Classification Results:
88/105 Correct
Accuracy = 0.8380952380952381 
Confusion matrix
[[32.  0.  2.]
 [ 2. 34.  3.]
 [ 5.  5. 22.]]
############################################################
No. of training videos : 16
Size : [4404, 4353, 4036, 4302, 4579, 4497, 4451, 4499, 5057, 4497, 4450, 4473, 4231, 4489, 5046, 4449]
nbins : 10, nClusters : 50 
Loading features from disk...
------------------------------------------------------------
1. v_file ::  ICC WT20 - Afghanistan vs South Africa - Match Highlights
------------------------------------------------------------
2. v_file ::  ICC WT20 - England v Sri Lanka Match Highlights
------------------------------------------------------------
3. v_file ::  ICC WT20 - India vs Australia Highlights
------------------------------------------------------------
4. v_file ::  ICC WT20 - India vs Pakistan Match Highlights
------------------------------------------------------------
5. v_file ::  ICC WT20 - South Africa vs England - Match Highlights
------------------------------------------------------------
6. v_file ::  ICC WT20 Afghanistan vs Zimbabwe Match Highlights
------------------------------------------------------------
7. v_file ::  ICC WT20 Australia vs Bangladesh - Match Highlights
------------------------------------------------------------
8. v_file ::  ICC WT20 Bangladesh v Ireland Match Highlights
------------------------------------------------------------
9. v_file ::  ICC WT20 Bangladesh vs Netherlands Highlights
------------------------------------------------------------
10. v_file ::  ICC WT20 Bangladesh vs Oman Match Highlights
------------------------------------------------------------
11. v_file ::  ICC WT20 England v New Zealand - Semi-Final Highlights
------------------------------------------------------------
12. v_file ::  ICC WT20 Final - England vs West Indies - Match Highlights
------------------------------------------------------------
13. v_file ::  ICC WT20 Hong Kong v Afghanistan Match Highlights
------------------------------------------------------------
14. v_file ::  ICC WT20 Hong Kong v Scotland Highlights
------------------------------------------------------------
15. v_file ::  ICC WT20 Hong Kong vs Zimbabwe Highlights
------------------------------------------------------------
16. v_file ::  ICC WT20 India vs Bangladesh - Match Highlights
INP_VEC_SIZE =  10
Clustering using KMeans: Input size -> (45630, 10) :: n_clusters -> 50
Done Clustering!
Create a dataframe for HOOF features...
Make bow vector for each feature vector
Shape of bovw_dataframe : (351, 50)
Saved IDF weights to disk.
Read 562 ground truth stroke labels from file.
Training stroke labels : 
[0 2 1 0 2 1 0 2 0 2 0 2 0 1 2 2 1 0 0 2 0 2 2 2 2 2 1 1 0 1 2 1 2 0 1 2 0
 1 2 2 0 1 1 0 1 2 1 1 0 2 1 1 2 2 2 1 0 2 2 1 0 1 2 2 0 0 1 1 0 1 0 1 1 0
 0 0 1 1 1 2 2 1 1 2 2 1 0 0 0 1 1 1 0 1 0 1 0 1 2 1 0 0 0 0 2 1 2 0 0 2 0
 2 1 1 1 1 2 0 0 1 2 1 1 1 2 1 2 1 2 1 2 1 1 2 2 1 1 2 0 1 1 2 2 1 1 0 0 1
 1 2 1 1 0 1 1 1 0 2 1 2 2 0 1 1 2 1 0 0 2 1 1 0 1 0 0 2 2 1 1 0 0 2 1 2 1
 0 0 2 2 0 0 1 0 0 1 2 2 1 2 0 1 1 0 0 2 2 1 2 0 2 0 1 0 1 0 2 0 0 2 0 2 0
 0 0 2 1 2 1 0 0 0 2 1 2 0 0 1 1 1 2 2 1 2 1 2 1 1 1 1 2 1 0 0 2 1 1 2 2 1
 0 1 1 0 1 0 0 2 1 2 2 2 1 0 1 1 1 0 0 2 1 2 1 0 0 2 1 0 2 0 0 0 1 1 0 1 0
 0 0 2 1 1 1 0 1 1 0 1 0 1 2 1 1 0 1 0 1 1 1 1 1 2 2 0 1 1 1 0 1 0 0 1 2 2
 1 0 1 0 2 1 1 2 2 2 0 2 0 2 0 1 1 2]
(351,)
............................................................................................................................................................................................................................................................................................................
optimization finished, #iter = 3000

WARNING: reaching max number of iterations
Using -s 2 may be faster (also see FAQ)

Objective value = -40.183638
nSV = 73
............................................................................................................................................................................................................................................................................................................
optimization finished, #iter = 3000

WARNING: reaching max number of iterations
Using -s 2 may be faster (also see FAQ)

Objective value = -47.408535
nSV = 82
............................................................................................................................................................................................................................................................................................................
optimization finished, #iter = 3000

WARNING: reaching max number of iterations
Using -s 2 may be faster (also see FAQ)

Objective value = -88.083147
nSV = 130
/home/arpan/opencv-py3/lib/python3.5/site-packages/sklearn/svm/base.py:931: ConvergenceWarning: Liblinear failed to converge, increase the number of iterations.
  "the number of iterations.", ConvergenceWarning)
[LibLinear]Training dataframe formed.
LDA execution !!! 
printing dictionary after corp  Dictionary(50 unique tokens: ['45', '5', '32', '47', '43']...) 
training complete saving to disk 
0 : ['0.116*"28" ', ' 0.089*"15" ', ' 0.046*"36" ', ' 0.044*"33" ', ' 0.043*"0" ', ' 0.040*"6" ', ' 0.036*"38" ', ' 0.036*"19" ', ' 0.033*"21" ', ' 0.031*"29"'] 
1 : ['0.048*"38" ', ' 0.047*"21" ', ' 0.045*"9" ', ' 0.042*"33" ', ' 0.041*"17" ', ' 0.040*"45" ', ' 0.039*"30" ', ' 0.037*"12" ', ' 0.037*"46" ', ' 0.036*"18"'] 
2 : ['0.126*"1" ', ' 0.097*"5" ', ' 0.051*"44" ', ' 0.041*"34" ', ' 0.041*"33" ', ' 0.040*"35" ', ' 0.037*"10" ', ' 0.034*"38" ', ' 0.033*"7" ', ' 0.033*"47"'] 
Training Time : topic action mapping is : 
topic0  topic1  topic2
[[69.81594971 14.2831994   1.06061029]
 [ 3.33014351 10.73232269 98.07127041]
 [12.19162184 58.0438844   9.94163907]]
Max Acc. :  0.7749287749287749
Acc values :  [0.32763532763532766, 0.7749287749287749, 0.11965811965811966, 0.21937321937321938, 0.452991452991453, 0.10541310541310542]
Acc values :  [[84, 17, 14], [84, 118, 70], [23, 5, 14], [2, 5, 70], [23, 118, 18], [2, 17, 18]]
perm_tuples :  [(0, 1, 2), (0, 2, 1), (1, 0, 2), (1, 2, 0), (2, 0, 1), (2, 1, 0)]
------------------------------------------------------------
1. v_file ::  ICC WT20 Ireland v Oman Match Highlights
------------------------------------------------------------
2. v_file ::  ICC WT20 Ireland vs Oman Highlights
------------------------------------------------------------
3. v_file ::  ICC WT20 Netherlands vs Ireland Match Highlights
------------------------------------------------------------
4. v_file ::  ICC WT20 New Zealand vs Pakistan - Match Highlights
------------------------------------------------------------
5. v_file ::  ICC WT20 Scotland vs Afghanistan Highlights
Create dataframe BOVW validation set...
Make bow vector for each feature vector
Shape of bovw_dataframe : (105, 50)
Reading IDF weights to disk.
[[ 6.83560389 16.87365758  1.44659069]
 [ 1.69316599 15.38735235  3.99474648]
 [ 2.08692914  9.71771964  3.17129421]]
Evaluating on the validation set...
##############################
BOW Classification Results:
87/105 Correct
Accuracy = 0.8285714285714286 
Confusion matrix
[[28.  1.  3.]
 [ 4. 36.  1.]
 [ 7.  2. 23.]]
############################################################
No. of training videos : 16
Size : [4404, 4353, 4036, 4302, 4579, 4497, 4451, 4499, 5057, 4497, 4450, 4473, 4231, 4489, 5046, 4449]
nbins : 20, nClusters : 10 
Loading features from disk...
------------------------------------------------------------
1. v_file ::  ICC WT20 - Afghanistan vs South Africa - Match Highlights
------------------------------------------------------------
2. v_file ::  ICC WT20 - England v Sri Lanka Match Highlights
------------------------------------------------------------
3. v_file ::  ICC WT20 - India vs Australia Highlights
------------------------------------------------------------
4. v_file ::  ICC WT20 - India vs Pakistan Match Highlights
------------------------------------------------------------
5. v_file ::  ICC WT20 - South Africa vs England - Match Highlights
------------------------------------------------------------
6. v_file ::  ICC WT20 Afghanistan vs Zimbabwe Match Highlights
------------------------------------------------------------
7. v_file ::  ICC WT20 Australia vs Bangladesh - Match Highlights
------------------------------------------------------------
8. v_file ::  ICC WT20 Bangladesh v Ireland Match Highlights
------------------------------------------------------------
9. v_file ::  ICC WT20 Bangladesh vs Netherlands Highlights
------------------------------------------------------------
10. v_file ::  ICC WT20 Bangladesh vs Oman Match Highlights
------------------------------------------------------------
11. v_file ::  ICC WT20 England v New Zealand - Semi-Final Highlights
------------------------------------------------------------
12. v_file ::  ICC WT20 Final - England vs West Indies - Match Highlights
------------------------------------------------------------
13. v_file ::  ICC WT20 Hong Kong v Afghanistan Match Highlights
------------------------------------------------------------
14. v_file ::  ICC WT20 Hong Kong v Scotland Highlights
------------------------------------------------------------
15. v_file ::  ICC WT20 Hong Kong vs Zimbabwe Highlights
------------------------------------------------------------
16. v_file ::  ICC WT20 India vs Bangladesh - Match Highlights
INP_VEC_SIZE =  20
Clustering using KMeans: Input size -> (45630, 20) :: n_clusters -> 10
Done Clustering!
Create a dataframe for HOOF features...
Make bow vector for each feature vector
Shape of bovw_dataframe : (351, 10)
Saved IDF weights to disk.
Read 562 ground truth stroke labels from file.
Training stroke labels : 
[0 2 1 0 2 1 0 2 0 2 0 2 0 1 2 2 1 0 0 2 0 2 2 2 2 2 1 1 0 1 2 1 2 0 1 2 0
 1 2 2 0 1 1 0 1 2 1 1 0 2 1 1 2 2 2 1 0 2 2 1 0 1 2 2 0 0 1 1 0 1 0 1 1 0
 0 0 1 1 1 2 2 1 1 2 2 1 0 0 0 1 1 1 0 1 0 1 0 1 2 1 0 0 0 0 2 1 2 0 0 2 0
 2 1 1 1 1 2 0 0 1 2 1 1 1 2 1 2 1 2 1 2 1 1 2 2 1 1 2 0 1 1 2 2 1 1 0 0 1
 1 2 1 1 0 1 1 1 0 2 1 2 2 0 1 1 2 1 0 0 2 1 1 0 1 0 0 2 2 1 1 0 0 2 1 2 1
 0 0 2 2 0 0 1 0 0 1 2 2 1 2 0 1 1 0 0 2 2 1 2 0 2 0 1 0 1 0 2 0 0 2 0 2 0
 0 0 2 1 2 1 0 0 0 2 1 2 0 0 1 1 1 2 2 1 2 1 2 1 1 1 1 2 1 0 0 2 1 1 2 2 1
 0 1 1 0 1 0 0 2 1 2 2 2 1 0 1 1 1 0 0 2 1 2 1 0 0 2 1 0 2 0 0 0 1 1 0 1 0
 0 0 2 1 1 1 0 1 1 0 1 0 1 2 1 1 0 1 0 1 1 1 1 1 2 2 0 1 1 1 0 1 0 0 1 2 2
 1 0 1 0 2 1 1 2 2 2 0 2 0 2 0 1 1 2]
(351,)
............................................................................................................................................................................................................................................................................................................
optimization finished, #iter = 3000

WARNING: reaching max number of iterations
Using -s 2 may be faster (also see FAQ)

Objective value = -122.848234
nSV = 200
............................................................................................................................................................................................................................................................................................................
optimization finished, #iter = 3000

WARNING: reaching max number of iterations
Using -s 2 may be faster (also see FAQ)

Objective value = -104.359698
nSV = 175
............................................................................................................................................................................................................................................................................................................
optimization finished, #iter = 3000

WARNING: reaching max number of iterations
Using -s 2 may be faster (also see FAQ)

Objective value = -151.126201
nSV = 219
/home/arpan/opencv-py3/lib/python3.5/site-packages/sklearn/svm/base.py:931: ConvergenceWarning: Liblinear failed to converge, increase the number of iterations.
  "the number of iterations.", ConvergenceWarning)
[LibLinear]Training dataframe formed.
LDA execution !!! 
printing dictionary after corp  Dictionary(10 unique tokens: ['6', '5', '8', '3', '0']...) 
training complete saving to disk 
0 : ['0.258*"4" ', ' 0.252*"0" ', ' 0.148*"7" ', ' 0.130*"5" ', ' 0.101*"6" ', ' 0.085*"3" ', ' 0.013*"2" ', ' 0.006*"9" ', ' 0.005*"8" ', ' 0.003*"1"'] 
1 : ['0.413*"3" ', ' 0.279*"0" ', ' 0.124*"4" ', ' 0.051*"2" ', ' 0.040*"1" ', ' 0.031*"8" ', ' 0.025*"9" ', ' 0.018*"7" ', ' 0.013*"6" ', ' 0.007*"5"'] 
2 : ['0.220*"9" ', ' 0.215*"0" ', ' 0.167*"8" ', ' 0.127*"2" ', ' 0.102*"4" ', ' 0.086*"1" ', ' 0.061*"3" ', ' 0.011*"7" ', ' 0.007*"5" ', ' 0.003*"6"'] 
Training Time : topic action mapping is : 
topic0  topic1  topic2
[[85.37738875  2.30841112  1.07644159]
 [ 5.65592298 25.5739131  67.27402952]
 [26.5393827  41.3924548   8.78190705]]
Max Acc. :  0.7008547008547008
Acc values :  [0.452991452991453, 0.7008547008547008, 0.07977207977207977, 0.18233618233618235, 0.3646723646723647, 0.21937321937321938]
Acc values :  [[103, 41, 15], [103, 90, 53], [4, 9, 15], [2, 9, 53], [4, 90, 34], [2, 41, 34]]
perm_tuples :  [(0, 1, 2), (0, 2, 1), (1, 0, 2), (1, 2, 0), (2, 0, 1), (2, 1, 0)]
------------------------------------------------------------
1. v_file ::  ICC WT20 Ireland v Oman Match Highlights
------------------------------------------------------------
2. v_file ::  ICC WT20 Ireland vs Oman Highlights
------------------------------------------------------------
3. v_file ::  ICC WT20 Netherlands vs Ireland Match Highlights
------------------------------------------------------------
4. v_file ::  ICC WT20 New Zealand vs Pakistan - Match Highlights
------------------------------------------------------------
5. v_file ::  ICC WT20 Scotland vs Afghanistan Highlights
Create dataframe BOVW validation set...
Make bow vector for each feature vector
Shape of bovw_dataframe : (105, 10)
Reading IDF weights to disk.
[[29.5850243   3.82600135  0.        ]
 [ 0.         10.72543845 17.20180053]
 [ 8.46716911  9.58271441  1.93635142]]
Evaluating on the validation set...
##############################
BOW Classification Results:
88/105 Correct
Accuracy = 0.8380952380952381 
Confusion matrix
[[29.  0.  2.]
 [ 0. 37.  3.]
 [10.  2. 22.]]
############################################################
No. of training videos : 16
Size : [4404, 4353, 4036, 4302, 4579, 4497, 4451, 4499, 5057, 4497, 4450, 4473, 4231, 4489, 5046, 4449]
nbins : 20, nClusters : 20 
Loading features from disk...
------------------------------------------------------------
1. v_file ::  ICC WT20 - Afghanistan vs South Africa - Match Highlights
------------------------------------------------------------
2. v_file ::  ICC WT20 - England v Sri Lanka Match Highlights
------------------------------------------------------------
3. v_file ::  ICC WT20 - India vs Australia Highlights
------------------------------------------------------------
4. v_file ::  ICC WT20 - India vs Pakistan Match Highlights
------------------------------------------------------------
5. v_file ::  ICC WT20 - South Africa vs England - Match Highlights
------------------------------------------------------------
6. v_file ::  ICC WT20 Afghanistan vs Zimbabwe Match Highlights
------------------------------------------------------------
7. v_file ::  ICC WT20 Australia vs Bangladesh - Match Highlights
------------------------------------------------------------
8. v_file ::  ICC WT20 Bangladesh v Ireland Match Highlights
------------------------------------------------------------
9. v_file ::  ICC WT20 Bangladesh vs Netherlands Highlights
------------------------------------------------------------
10. v_file ::  ICC WT20 Bangladesh vs Oman Match Highlights
------------------------------------------------------------
11. v_file ::  ICC WT20 England v New Zealand - Semi-Final Highlights
------------------------------------------------------------
12. v_file ::  ICC WT20 Final - England vs West Indies - Match Highlights
------------------------------------------------------------
13. v_file ::  ICC WT20 Hong Kong v Afghanistan Match Highlights
------------------------------------------------------------
14. v_file ::  ICC WT20 Hong Kong v Scotland Highlights
------------------------------------------------------------
15. v_file ::  ICC WT20 Hong Kong vs Zimbabwe Highlights
------------------------------------------------------------
16. v_file ::  ICC WT20 India vs Bangladesh - Match Highlights
INP_VEC_SIZE =  20
Clustering using KMeans: Input size -> (45630, 20) :: n_clusters -> 20
Done Clustering!
Create a dataframe for HOOF features...
Make bow vector for each feature vector
Shape of bovw_dataframe : (351, 20)
Saved IDF weights to disk.
Read 562 ground truth stroke labels from file.
Training stroke labels : 
[0 2 1 0 2 1 0 2 0 2 0 2 0 1 2 2 1 0 0 2 0 2 2 2 2 2 1 1 0 1 2 1 2 0 1 2 0
 1 2 2 0 1 1 0 1 2 1 1 0 2 1 1 2 2 2 1 0 2 2 1 0 1 2 2 0 0 1 1 0 1 0 1 1 0
 0 0 1 1 1 2 2 1 1 2 2 1 0 0 0 1 1 1 0 1 0 1 0 1 2 1 0 0 0 0 2 1 2 0 0 2 0
 2 1 1 1 1 2 0 0 1 2 1 1 1 2 1 2 1 2 1 2 1 1 2 2 1 1 2 0 1 1 2 2 1 1 0 0 1
 1 2 1 1 0 1 1 1 0 2 1 2 2 0 1 1 2 1 0 0 2 1 1 0 1 0 0 2 2 1 1 0 0 2 1 2 1
 0 0 2 2 0 0 1 0 0 1 2 2 1 2 0 1 1 0 0 2 2 1 2 0 2 0 1 0 1 0 2 0 0 2 0 2 0
 0 0 2 1 2 1 0 0 0 2 1 2 0 0 1 1 1 2 2 1 2 1 2 1 1 1 1 2 1 0 0 2 1 1 2 2 1
 0 1 1 0 1 0 0 2 1 2 2 2 1 0 1 1 1 0 0 2 1 2 1 0 0 2 1 0 2 0 0 0 1 1 0 1 0
 0 0 2 1 1 1 0 1 1 0 1 0 1 2 1 1 0 1 0 1 1 1 1 1 2 2 0 1 1 1 0 1 0 0 1 2 2
 1 0 1 0 2 1 1 2 2 2 0 2 0 2 0 1 1 2]
(351,)
............................................................................................................................................................................................................................................................................................................
optimization finished, #iter = 3000

WARNING: reaching max number of iterations
Using -s 2 may be faster (also see FAQ)

Objective value = -88.959618
nSV = 145
............................................................................................................................................................................................................................................................................................................
optimization finished, #iter = 3000

WARNING: reaching max number of iterations
Using -s 2 may be faster (also see FAQ)

Objective value = -74.801743
nSV = 135
............................................................................................................................................................................................................................................................................................................
optimization finished, #iter = 3000

WARNING: reaching max number of iterations
Using -s 2 may be faster (also see FAQ)

Objective value = -125.806223
nSV = 190
/home/arpan/opencv-py3/lib/python3.5/site-packages/sklearn/svm/base.py:931: ConvergenceWarning: Liblinear failed to converge, increase the number of iterations.
  "the number of iterations.", ConvergenceWarning)
[LibLinear]Training dataframe formed.
LDA execution !!! 
printing dictionary after corp  Dictionary(20 unique tokens: ['13', '12', '18', '0', '19']...) 
training complete saving to disk 
0 : ['0.197*"12" ', ' 0.144*"0" ', ' 0.113*"18" ', ' 0.085*"13" ', ' 0.081*"9" ', ' 0.076*"3" ', ' 0.070*"4" ', ' 0.054*"19" ', ' 0.046*"15" ', ' 0.042*"7"'] 
1 : ['0.192*"0" ', ' 0.187*"12" ', ' 0.130*"11" ', ' 0.117*"5" ', ' 0.106*"18" ', ' 0.048*"16" ', ' 0.048*"8" ', ' 0.032*"14" ', ' 0.028*"2" ', ' 0.028*"13"'] 
2 : ['0.147*"16" ', ' 0.131*"12" ', ' 0.120*"14" ', ' 0.090*"0" ', ' 0.088*"9" ', ' 0.072*"2" ', ' 0.062*"1" ', ' 0.058*"17" ', ' 0.053*"7" ', ' 0.047*"11"'] 
Training Time : topic action mapping is : 
topic0  topic1  topic2
[[91.48705041  4.84367347  0.        ]
 [ 6.68585929 30.53053775 65.681306  ]
 [45.1761283  24.36524722  8.56567898]]
Max Acc. :  0.6324786324786325
Acc values :  [0.4472934472934473, 0.6324786324786325, 0.08831908831908832, 0.12535612535612536, 0.42735042735042733, 0.2792022792022792]
Acc values :  [[101, 43, 13], [101, 87, 34], [8, 10, 13], [0, 10, 34], [8, 87, 55], [0, 43, 55]]
perm_tuples :  [(0, 1, 2), (0, 2, 1), (1, 0, 2), (1, 2, 0), (2, 0, 1), (2, 1, 0)]
------------------------------------------------------------
1. v_file ::  ICC WT20 Ireland v Oman Match Highlights
------------------------------------------------------------
2. v_file ::  ICC WT20 Ireland vs Oman Highlights
------------------------------------------------------------
3. v_file ::  ICC WT20 Netherlands vs Ireland Match Highlights
------------------------------------------------------------
4. v_file ::  ICC WT20 New Zealand vs Pakistan - Match Highlights
------------------------------------------------------------
5. v_file ::  ICC WT20 Scotland vs Afghanistan Highlights
Create dataframe BOVW validation set...
Make bow vector for each feature vector
Shape of bovw_dataframe : (105, 20)
Reading IDF weights to disk.
[[14.85324469  4.66105023  5.3394312 ]
 [ 7.82969105  6.3062956   7.55020407]
 [ 2.50493526 15.4179523   1.08425358]]
Evaluating on the validation set...
##############################
BOW Classification Results:
91/105 Correct
Accuracy = 0.8666666666666667 
Confusion matrix
[[33.  1.  0.]
 [ 0. 34.  3.]
 [ 6.  4. 24.]]
############################################################
No. of training videos : 16
Size : [4404, 4353, 4036, 4302, 4579, 4497, 4451, 4499, 5057, 4497, 4450, 4473, 4231, 4489, 5046, 4449]
nbins : 20, nClusters : 30 
Loading features from disk...
------------------------------------------------------------
1. v_file ::  ICC WT20 - Afghanistan vs South Africa - Match Highlights
------------------------------------------------------------
2. v_file ::  ICC WT20 - England v Sri Lanka Match Highlights
------------------------------------------------------------
3. v_file ::  ICC WT20 - India vs Australia Highlights
------------------------------------------------------------
4. v_file ::  ICC WT20 - India vs Pakistan Match Highlights
------------------------------------------------------------
5. v_file ::  ICC WT20 - South Africa vs England - Match Highlights
------------------------------------------------------------
6. v_file ::  ICC WT20 Afghanistan vs Zimbabwe Match Highlights
------------------------------------------------------------
7. v_file ::  ICC WT20 Australia vs Bangladesh - Match Highlights
------------------------------------------------------------
8. v_file ::  ICC WT20 Bangladesh v Ireland Match Highlights
------------------------------------------------------------
9. v_file ::  ICC WT20 Bangladesh vs Netherlands Highlights
------------------------------------------------------------
10. v_file ::  ICC WT20 Bangladesh vs Oman Match Highlights
------------------------------------------------------------
11. v_file ::  ICC WT20 England v New Zealand - Semi-Final Highlights
------------------------------------------------------------
12. v_file ::  ICC WT20 Final - England vs West Indies - Match Highlights
------------------------------------------------------------
13. v_file ::  ICC WT20 Hong Kong v Afghanistan Match Highlights
------------------------------------------------------------
14. v_file ::  ICC WT20 Hong Kong v Scotland Highlights
------------------------------------------------------------
15. v_file ::  ICC WT20 Hong Kong vs Zimbabwe Highlights
------------------------------------------------------------
16. v_file ::  ICC WT20 India vs Bangladesh - Match Highlights
INP_VEC_SIZE =  20
Clustering using KMeans: Input size -> (45630, 20) :: n_clusters -> 30
Done Clustering!
Create a dataframe for HOOF features...
Make bow vector for each feature vector
Shape of bovw_dataframe : (351, 30)
Saved IDF weights to disk.
Read 562 ground truth stroke labels from file.
Training stroke labels : 
[0 2 1 0 2 1 0 2 0 2 0 2 0 1 2 2 1 0 0 2 0 2 2 2 2 2 1 1 0 1 2 1 2 0 1 2 0
 1 2 2 0 1 1 0 1 2 1 1 0 2 1 1 2 2 2 1 0 2 2 1 0 1 2 2 0 0 1 1 0 1 0 1 1 0
 0 0 1 1 1 2 2 1 1 2 2 1 0 0 0 1 1 1 0 1 0 1 0 1 2 1 0 0 0 0 2 1 2 0 0 2 0
 2 1 1 1 1 2 0 0 1 2 1 1 1 2 1 2 1 2 1 2 1 1 2 2 1 1 2 0 1 1 2 2 1 1 0 0 1
 1 2 1 1 0 1 1 1 0 2 1 2 2 0 1 1 2 1 0 0 2 1 1 0 1 0 0 2 2 1 1 0 0 2 1 2 1
 0 0 2 2 0 0 1 0 0 1 2 2 1 2 0 1 1 0 0 2 2 1 2 0 2 0 1 0 1 0 2 0 0 2 0 2 0
 0 0 2 1 2 1 0 0 0 2 1 2 0 0 1 1 1 2 2 1 2 1 2 1 1 1 1 2 1 0 0 2 1 1 2 2 1
 0 1 1 0 1 0 0 2 1 2 2 2 1 0 1 1 1 0 0 2 1 2 1 0 0 2 1 0 2 0 0 0 1 1 0 1 0
 0 0 2 1 1 1 0 1 1 0 1 0 1 2 1 1 0 1 0 1 1 1 1 1 2 2 0 1 1 1 0 1 0 0 1 2 2
 1 0 1 0 2 1 1 2 2 2 0 2 0 2 0 1 1 2]
(351,)
............................................................................................................................................................................................................................................................................................................
optimization finished, #iter = 3000

WARNING: reaching max number of iterations
Using -s 2 may be faster (also see FAQ)

Objective value = -68.650646
nSV = 110
............................................................................................................................................................................................................................................................................................................
optimization finished, #iter = 3000

WARNING: reaching max number of iterations
Using -s 2 may be faster (also see FAQ)

Objective value = -72.016663
nSV = 127
............................................................................................................................................................................................................................................................................................................
optimization finished, #iter = 3000

WARNING: reaching max number of iterations
Using -s 2 may be faster (also see FAQ)

Objective value = -109.371699
nSV = 170
/home/arpan/opencv-py3/lib/python3.5/site-packages/sklearn/svm/base.py:931: ConvergenceWarning: Liblinear failed to converge, increase the number of iterations.
  "the number of iterations.", ConvergenceWarning)
[LibLinear]Training dataframe formed.
LDA execution !!! 
printing dictionary after corp  Dictionary(30 unique tokens: ['12', '5', '0', '24', '15']...) 
training complete saving to disk 
0 : ['0.136*"9" ', ' 0.132*"12" ', ' 0.131*"1" ', ' 0.112*"18" ', ' 0.071*"21" ', ' 0.059*"26" ', ' 0.057*"3" ', ' 0.054*"16" ', ' 0.037*"29" ', ' 0.033*"13"'] 
1 : ['0.131*"12" ', ' 0.091*"3" ', ' 0.089*"1" ', ' 0.084*"13" ', ' 0.076*"24" ', ' 0.076*"9" ', ' 0.074*"5" ', ' 0.066*"2" ', ' 0.056*"7" ', ' 0.041*"22"'] 
2 : ['0.136*"4" ', ' 0.110*"6" ', ' 0.109*"1" ', ' 0.088*"12" ', ' 0.066*"8" ', ' 0.062*"17" ', ' 0.051*"16" ', ' 0.050*"9" ', ' 0.040*"27" ', ' 0.040*"26"'] 
Training Time : topic action mapping is : 
topic0  topic1  topic2
[[ 3.77704388 85.11309344  1.0914892 ]
 [25.5315921   3.77141273 75.51060843]
 [53.05174193 22.03928679  5.51409435]]
Max Acc. :  0.7407407407407407
Acc values :  [0.05982905982905983, 0.37037037037037035, 0.42450142450142453, 0.19943019943019943, 0.7407407407407407, 0.20512820512820512]
Acc values :  [[7, 5, 9], [7, 95, 28], [100, 40, 9], [2, 40, 28], [100, 95, 65], [2, 5, 65]]
perm_tuples :  [(0, 1, 2), (0, 2, 1), (1, 0, 2), (1, 2, 0), (2, 0, 1), (2, 1, 0)]
------------------------------------------------------------
1. v_file ::  ICC WT20 Ireland v Oman Match Highlights
------------------------------------------------------------
2. v_file ::  ICC WT20 Ireland vs Oman Highlights
------------------------------------------------------------
3. v_file ::  ICC WT20 Netherlands vs Ireland Match Highlights
------------------------------------------------------------
4. v_file ::  ICC WT20 New Zealand vs Pakistan - Match Highlights
------------------------------------------------------------
5. v_file ::  ICC WT20 Scotland vs Afghanistan Highlights
Create dataframe BOVW validation set...
Make bow vector for each feature vector
Shape of bovw_dataframe : (105, 30)
Reading IDF weights to disk.
[[11.74934959  5.03390914  5.24869072]
 [ 6.42023319  1.52839041 16.46038687]
 [ 3.74687493  5.75903878  7.66495717]]
Evaluating on the validation set...
##############################
BOW Classification Results:
88/105 Correct
Accuracy = 0.8380952380952381 
Confusion matrix
[[30.  1.  0.]
 [ 1. 34.  3.]
 [ 8.  4. 24.]]
############################################################
No. of training videos : 16
Size : [4404, 4353, 4036, 4302, 4579, 4497, 4451, 4499, 5057, 4497, 4450, 4473, 4231, 4489, 5046, 4449]
nbins : 20, nClusters : 40 
Loading features from disk...
------------------------------------------------------------
1. v_file ::  ICC WT20 - Afghanistan vs South Africa - Match Highlights
------------------------------------------------------------
2. v_file ::  ICC WT20 - England v Sri Lanka Match Highlights
------------------------------------------------------------
3. v_file ::  ICC WT20 - India vs Australia Highlights
------------------------------------------------------------
4. v_file ::  ICC WT20 - India vs Pakistan Match Highlights
------------------------------------------------------------
5. v_file ::  ICC WT20 - South Africa vs England - Match Highlights
------------------------------------------------------------
6. v_file ::  ICC WT20 Afghanistan vs Zimbabwe Match Highlights
------------------------------------------------------------
7. v_file ::  ICC WT20 Australia vs Bangladesh - Match Highlights
------------------------------------------------------------
8. v_file ::  ICC WT20 Bangladesh v Ireland Match Highlights
------------------------------------------------------------
9. v_file ::  ICC WT20 Bangladesh vs Netherlands Highlights
------------------------------------------------------------
10. v_file ::  ICC WT20 Bangladesh vs Oman Match Highlights
------------------------------------------------------------
11. v_file ::  ICC WT20 England v New Zealand - Semi-Final Highlights
------------------------------------------------------------
12. v_file ::  ICC WT20 Final - England vs West Indies - Match Highlights
------------------------------------------------------------
13. v_file ::  ICC WT20 Hong Kong v Afghanistan Match Highlights
------------------------------------------------------------
14. v_file ::  ICC WT20 Hong Kong v Scotland Highlights
------------------------------------------------------------
15. v_file ::  ICC WT20 Hong Kong vs Zimbabwe Highlights
------------------------------------------------------------
16. v_file ::  ICC WT20 India vs Bangladesh - Match Highlights
INP_VEC_SIZE =  20
Clustering using KMeans: Input size -> (45630, 20) :: n_clusters -> 40
Done Clustering!
Create a dataframe for HOOF features...
Make bow vector for each feature vector
Shape of bovw_dataframe : (351, 40)
Saved IDF weights to disk.
Read 562 ground truth stroke labels from file.
Training stroke labels : 
[0 2 1 0 2 1 0 2 0 2 0 2 0 1 2 2 1 0 0 2 0 2 2 2 2 2 1 1 0 1 2 1 2 0 1 2 0
 1 2 2 0 1 1 0 1 2 1 1 0 2 1 1 2 2 2 1 0 2 2 1 0 1 2 2 0 0 1 1 0 1 0 1 1 0
 0 0 1 1 1 2 2 1 1 2 2 1 0 0 0 1 1 1 0 1 0 1 0 1 2 1 0 0 0 0 2 1 2 0 0 2 0
 2 1 1 1 1 2 0 0 1 2 1 1 1 2 1 2 1 2 1 2 1 1 2 2 1 1 2 0 1 1 2 2 1 1 0 0 1
 1 2 1 1 0 1 1 1 0 2 1 2 2 0 1 1 2 1 0 0 2 1 1 0 1 0 0 2 2 1 1 0 0 2 1 2 1
 0 0 2 2 0 0 1 0 0 1 2 2 1 2 0 1 1 0 0 2 2 1 2 0 2 0 1 0 1 0 2 0 0 2 0 2 0
 0 0 2 1 2 1 0 0 0 2 1 2 0 0 1 1 1 2 2 1 2 1 2 1 1 1 1 2 1 0 0 2 1 1 2 2 1
 0 1 1 0 1 0 0 2 1 2 2 2 1 0 1 1 1 0 0 2 1 2 1 0 0 2 1 0 2 0 0 0 1 1 0 1 0
 0 0 2 1 1 1 0 1 1 0 1 0 1 2 1 1 0 1 0 1 1 1 1 1 2 2 0 1 1 1 0 1 0 0 1 2 2
 1 0 1 0 2 1 1 2 2 2 0 2 0 2 0 1 1 2]
(351,)
............................................................................................................................................................................................................................................................................................................
optimization finished, #iter = 3000

WARNING: reaching max number of iterations
Using -s 2 may be faster (also see FAQ)

Objective value = -52.075470
nSV = 95
............................................................................................................................................................................................................................................................................................................
optimization finished, #iter = 3000

WARNING: reaching max number of iterations
Using -s 2 may be faster (also see FAQ)

Objective value = -52.857296
nSV = 93
............................................................................................................................................................................................................................................................................................................
optimization finished, #iter = 3000

WARNING: reaching max number of iterations
Using -s 2 may be faster (also see FAQ)

Objective value = -101.096640
nSV = 154
/home/arpan/opencv-py3/lib/python3.5/site-packages/sklearn/svm/base.py:931: ConvergenceWarning: Liblinear failed to converge, increase the number of iterations.
  "the number of iterations.", ConvergenceWarning)
[LibLinear]Training dataframe formed.
LDA execution !!! 
printing dictionary after corp  Dictionary(40 unique tokens: ['18', '33', '12', '39', '30']...) 
training complete saving to disk 
0 : ['0.082*"0" ', ' 0.073*"37" ', ' 0.070*"4" ', ' 0.061*"15" ', ' 0.058*"39" ', ' 0.051*"2" ', ' 0.050*"31" ', ' 0.046*"32" ', ' 0.046*"6" ', ' 0.040*"7"'] 
1 : ['0.095*"2" ', ' 0.089*"37" ', ' 0.088*"15" ', ' 0.087*"0" ', ' 0.082*"3" ', ' 0.081*"19" ', ' 0.075*"13" ', ' 0.048*"1" ', ' 0.045*"34" ', ' 0.043*"10"'] 
2 : ['0.119*"15" ', ' 0.094*"0" ', ' 0.072*"12" ', ' 0.072*"5" ', ' 0.070*"20" ', ' 0.053*"21" ', ' 0.044*"25" ', ' 0.039*"11" ', ' 0.038*"17" ', ' 0.037*"2"'] 
Training Time : topic action mapping is : 
topic0  topic1  topic2
[[  1.07970148  37.60031742  44.64003864]
 [103.95481801  10.66385615   1.45472795]
 [ 19.92003813  51.85212943   7.18955177]]
Max Acc. :  0.6837606837606838
Acc values :  [0.08262108262108261, 0.19373219373219372, 0.5213675213675214, 0.6837606837606838, 0.2336182336182336, 0.2849002849002849]
Acc values :  [[2, 17, 10], [2, 2, 64], [52, 121, 10], [55, 121, 64], [52, 2, 28], [55, 17, 28]]
perm_tuples :  [(0, 1, 2), (0, 2, 1), (1, 0, 2), (1, 2, 0), (2, 0, 1), (2, 1, 0)]
------------------------------------------------------------
1. v_file ::  ICC WT20 Ireland v Oman Match Highlights
------------------------------------------------------------
2. v_file ::  ICC WT20 Ireland vs Oman Highlights
------------------------------------------------------------
3. v_file ::  ICC WT20 Netherlands vs Ireland Match Highlights
------------------------------------------------------------
4. v_file ::  ICC WT20 New Zealand vs Pakistan - Match Highlights
------------------------------------------------------------
5. v_file ::  ICC WT20 Scotland vs Afghanistan Highlights
Create dataframe BOVW validation set...
Make bow vector for each feature vector
Shape of bovw_dataframe : (105, 40)
Reading IDF weights to disk.
[[ 3.65395325  9.84860051  9.30864897]
 [17.26834616  4.79016504  1.52941629]
 [ 1.04718161 13.19634822  4.01855564]]
Evaluating on the validation set...
##############################
BOW Classification Results:
88/105 Correct
Accuracy = 0.8380952380952381 
Confusion matrix
[[29.  1.  1.]
 [ 3. 36.  3.]
 [ 7.  2. 23.]]
############################################################
No. of training videos : 16
Size : [4404, 4353, 4036, 4302, 4579, 4497, 4451, 4499, 5057, 4497, 4450, 4473, 4231, 4489, 5046, 4449]
nbins : 20, nClusters : 50 
Loading features from disk...
------------------------------------------------------------
1. v_file ::  ICC WT20 - Afghanistan vs South Africa - Match Highlights
------------------------------------------------------------
2. v_file ::  ICC WT20 - England v Sri Lanka Match Highlights
------------------------------------------------------------
3. v_file ::  ICC WT20 - India vs Australia Highlights
------------------------------------------------------------
4. v_file ::  ICC WT20 - India vs Pakistan Match Highlights
------------------------------------------------------------
5. v_file ::  ICC WT20 - South Africa vs England - Match Highlights
------------------------------------------------------------
6. v_file ::  ICC WT20 Afghanistan vs Zimbabwe Match Highlights
------------------------------------------------------------
7. v_file ::  ICC WT20 Australia vs Bangladesh - Match Highlights
------------------------------------------------------------
8. v_file ::  ICC WT20 Bangladesh v Ireland Match Highlights
------------------------------------------------------------
9. v_file ::  ICC WT20 Bangladesh vs Netherlands Highlights
------------------------------------------------------------
10. v_file ::  ICC WT20 Bangladesh vs Oman Match Highlights
------------------------------------------------------------
11. v_file ::  ICC WT20 England v New Zealand - Semi-Final Highlights
------------------------------------------------------------
12. v_file ::  ICC WT20 Final - England vs West Indies - Match Highlights
------------------------------------------------------------
13. v_file ::  ICC WT20 Hong Kong v Afghanistan Match Highlights
------------------------------------------------------------
14. v_file ::  ICC WT20 Hong Kong v Scotland Highlights
------------------------------------------------------------
15. v_file ::  ICC WT20 Hong Kong vs Zimbabwe Highlights
------------------------------------------------------------
16. v_file ::  ICC WT20 India vs Bangladesh - Match Highlights
INP_VEC_SIZE =  20
Clustering using KMeans: Input size -> (45630, 20) :: n_clusters -> 50
Done Clustering!
Create a dataframe for HOOF features...
Make bow vector for each feature vector
Shape of bovw_dataframe : (351, 50)
Saved IDF weights to disk.
Read 562 ground truth stroke labels from file.
Training stroke labels : 
[0 2 1 0 2 1 0 2 0 2 0 2 0 1 2 2 1 0 0 2 0 2 2 2 2 2 1 1 0 1 2 1 2 0 1 2 0
 1 2 2 0 1 1 0 1 2 1 1 0 2 1 1 2 2 2 1 0 2 2 1 0 1 2 2 0 0 1 1 0 1 0 1 1 0
 0 0 1 1 1 2 2 1 1 2 2 1 0 0 0 1 1 1 0 1 0 1 0 1 2 1 0 0 0 0 2 1 2 0 0 2 0
 2 1 1 1 1 2 0 0 1 2 1 1 1 2 1 2 1 2 1 2 1 1 2 2 1 1 2 0 1 1 2 2 1 1 0 0 1
 1 2 1 1 0 1 1 1 0 2 1 2 2 0 1 1 2 1 0 0 2 1 1 0 1 0 0 2 2 1 1 0 0 2 1 2 1
 0 0 2 2 0 0 1 0 0 1 2 2 1 2 0 1 1 0 0 2 2 1 2 0 2 0 1 0 1 0 2 0 0 2 0 2 0
 0 0 2 1 2 1 0 0 0 2 1 2 0 0 1 1 1 2 2 1 2 1 2 1 1 1 1 2 1 0 0 2 1 1 2 2 1
 0 1 1 0 1 0 0 2 1 2 2 2 1 0 1 1 1 0 0 2 1 2 1 0 0 2 1 0 2 0 0 0 1 1 0 1 0
 0 0 2 1 1 1 0 1 1 0 1 0 1 2 1 1 0 1 0 1 1 1 1 1 2 2 0 1 1 1 0 1 0 0 1 2 2
 1 0 1 0 2 1 1 2 2 2 0 2 0 2 0 1 1 2]
(351,)
............................................................................................................................................................................................................................................................................................................
optimization finished, #iter = 3000

WARNING: reaching max number of iterations
Using -s 2 may be faster (also see FAQ)

Objective value = -44.099910
nSV = 75
............................................................................................................................................................................................................................................................................................................
optimization finished, #iter = 3000

WARNING: reaching max number of iterations
Using -s 2 may be faster (also see FAQ)

Objective value = -47.581008
nSV = 84
............................................................................................................................................................................................................................................................................................................
optimization finished, #iter = 3000

WARNING: reaching max number of iterations
Using -s 2 may be faster (also see FAQ)

Objective value = -92.185290
nSV = 141
/home/arpan/opencv-py3/lib/python3.5/site-packages/sklearn/svm/base.py:931: ConvergenceWarning: Liblinear failed to converge, increase the number of iterations.
  "the number of iterations.", ConvergenceWarning)
[LibLinear]Training dataframe formed.
LDA execution !!! 
printing dictionary after corp  Dictionary(50 unique tokens: ['45', '5', '32', '47', '43']...) 
training complete saving to disk 
0 : ['0.093*"10" ', ' 0.084*"4" ', ' 0.055*"25" ', ' 0.054*"15" ', ' 0.053*"45" ', ' 0.052*"5" ', ' 0.041*"22" ', ' 0.039*"36" ', ' 0.036*"28" ', ' 0.033*"30"'] 
1 : ['0.081*"45" ', ' 0.069*"6" ', ' 0.058*"4" ', ' 0.043*"5" ', ' 0.043*"0" ', ' 0.040*"30" ', ' 0.038*"10" ', ' 0.038*"36" ', ' 0.037*"47" ', ' 0.036*"22"'] 
2 : ['0.081*"45" ', ' 0.070*"4" ', ' 0.046*"7" ', ' 0.043*"2" ', ' 0.042*"0" ', ' 0.041*"22" ', ' 0.040*"16" ', ' 0.039*"9" ', ' 0.039*"49" ', ' 0.039*"39"'] 
Training Time : topic action mapping is : 
topic0  topic1  topic2
[[ 0.579265    2.31611636 94.34267917]
 [38.46423155 66.65651044  5.12327072]
 [ 4.27145791 31.5603286  45.35579804]]
Max Acc. :  0.5555555555555556
Acc values :  [0.396011396011396, 0.1396011396011396, 0.30484330484330485, 0.5527065527065527, 0.05128205128205128, 0.5555555555555556]
Acc values :  [[1, 84, 54], [1, 7, 41], [4, 49, 54], [104, 49, 41], [4, 7, 7], [104, 84, 7]]
perm_tuples :  [(0, 1, 2), (0, 2, 1), (1, 0, 2), (1, 2, 0), (2, 0, 1), (2, 1, 0)]
------------------------------------------------------------
1. v_file ::  ICC WT20 Ireland v Oman Match Highlights
------------------------------------------------------------
2. v_file ::  ICC WT20 Ireland vs Oman Highlights
------------------------------------------------------------
3. v_file ::  ICC WT20 Netherlands vs Ireland Match Highlights
------------------------------------------------------------
4. v_file ::  ICC WT20 New Zealand vs Pakistan - Match Highlights
------------------------------------------------------------
5. v_file ::  ICC WT20 Scotland vs Afghanistan Highlights
Create dataframe BOVW validation set...
Make bow vector for each feature vector
Shape of bovw_dataframe : (105, 50)
Reading IDF weights to disk.
[[ 6.92066091  0.         17.37050608]
 [ 1.81830549  5.60094881 15.29660705]
 [ 0.          0.         19.51224899]]
Evaluating on the validation set...
##############################
BOW Classification Results:
85/105 Correct
Accuracy = 0.8095238095238095 
Confusion matrix
[[30.  1.  1.]
 [ 1. 32.  3.]
 [ 8.  6. 23.]]
############################################################
No. of training videos : 16
Size : [4404, 4353, 4036, 4302, 4579, 4497, 4451, 4499, 5057, 4497, 4450, 4473, 4231, 4489, 5046, 4449]
nbins : 30, nClusters : 10 
Loading features from disk...
------------------------------------------------------------
1. v_file ::  ICC WT20 - Afghanistan vs South Africa - Match Highlights
------------------------------------------------------------
2. v_file ::  ICC WT20 - England v Sri Lanka Match Highlights
------------------------------------------------------------
3. v_file ::  ICC WT20 - India vs Australia Highlights
------------------------------------------------------------
4. v_file ::  ICC WT20 - India vs Pakistan Match Highlights
------------------------------------------------------------
5. v_file ::  ICC WT20 - South Africa vs England - Match Highlights
------------------------------------------------------------
6. v_file ::  ICC WT20 Afghanistan vs Zimbabwe Match Highlights
------------------------------------------------------------
7. v_file ::  ICC WT20 Australia vs Bangladesh - Match Highlights
------------------------------------------------------------
8. v_file ::  ICC WT20 Bangladesh v Ireland Match Highlights
------------------------------------------------------------
9. v_file ::  ICC WT20 Bangladesh vs Netherlands Highlights
------------------------------------------------------------
10. v_file ::  ICC WT20 Bangladesh vs Oman Match Highlights
------------------------------------------------------------
11. v_file ::  ICC WT20 England v New Zealand - Semi-Final Highlights
------------------------------------------------------------
12. v_file ::  ICC WT20 Final - England vs West Indies - Match Highlights
------------------------------------------------------------
13. v_file ::  ICC WT20 Hong Kong v Afghanistan Match Highlights
------------------------------------------------------------
14. v_file ::  ICC WT20 Hong Kong v Scotland Highlights
------------------------------------------------------------
15. v_file ::  ICC WT20 Hong Kong vs Zimbabwe Highlights
------------------------------------------------------------
16. v_file ::  ICC WT20 India vs Bangladesh - Match Highlights
INP_VEC_SIZE =  30
Clustering using KMeans: Input size -> (45630, 30) :: n_clusters -> 10
Done Clustering!
Create a dataframe for HOOF features...
Make bow vector for each feature vector
Shape of bovw_dataframe : (351, 10)
Saved IDF weights to disk.
Read 562 ground truth stroke labels from file.
Training stroke labels : 
[0 2 1 0 2 1 0 2 0 2 0 2 0 1 2 2 1 0 0 2 0 2 2 2 2 2 1 1 0 1 2 1 2 0 1 2 0
 1 2 2 0 1 1 0 1 2 1 1 0 2 1 1 2 2 2 1 0 2 2 1 0 1 2 2 0 0 1 1 0 1 0 1 1 0
 0 0 1 1 1 2 2 1 1 2 2 1 0 0 0 1 1 1 0 1 0 1 0 1 2 1 0 0 0 0 2 1 2 0 0 2 0
 2 1 1 1 1 2 0 0 1 2 1 1 1 2 1 2 1 2 1 2 1 1 2 2 1 1 2 0 1 1 2 2 1 1 0 0 1
 1 2 1 1 0 1 1 1 0 2 1 2 2 0 1 1 2 1 0 0 2 1 1 0 1 0 0 2 2 1 1 0 0 2 1 2 1
 0 0 2 2 0 0 1 0 0 1 2 2 1 2 0 1 1 0 0 2 2 1 2 0 2 0 1 0 1 0 2 0 0 2 0 2 0
 0 0 2 1 2 1 0 0 0 2 1 2 0 0 1 1 1 2 2 1 2 1 2 1 1 1 1 2 1 0 0 2 1 1 2 2 1
 0 1 1 0 1 0 0 2 1 2 2 2 1 0 1 1 1 0 0 2 1 2 1 0 0 2 1 0 2 0 0 0 1 1 0 1 0
 0 0 2 1 1 1 0 1 1 0 1 0 1 2 1 1 0 1 0 1 1 1 1 1 2 2 0 1 1 1 0 1 0 0 1 2 2
 1 0 1 0 2 1 1 2 2 2 0 2 0 2 0 1 1 2]
(351,)
............................................................................................................................................................................................................................................................................................................
optimization finished, #iter = 3000

WARNING: reaching max number of iterations
Using -s 2 may be faster (also see FAQ)

Objective value = -112.161809
nSV = 175
............................................................................................................................................................................................................................................................................................................
optimization finished, #iter = 3000

WARNING: reaching max number of iterations
Using -s 2 may be faster (also see FAQ)

Objective value = -97.020201
nSV = 166
............................................................................................................................................................................................................................................................................................................
optimization finished, #iter = 3000

WARNING: reaching max number of iterations
Using -s 2 may be faster (also see FAQ)

Objective value = -156.437371
nSV = 225
/home/arpan/opencv-py3/lib/python3.5/site-packages/sklearn/svm/base.py:931: ConvergenceWarning: Liblinear failed to converge, increase the number of iterations.
  "the number of iterations.", ConvergenceWarning)
[LibLinear]Training dataframe formed.
LDA execution !!! 
printing dictionary after corp  Dictionary(10 unique tokens: ['6', '1', '8', '5', '3']...) 
training complete saving to disk 
0 : ['0.383*"0" ', ' 0.375*"6" ', ' 0.104*"1" ', ' 0.051*"8" ', ' 0.034*"2" ', ' 0.024*"3" ', ' 0.014*"5" ', ' 0.011*"9" ', ' 0.003*"4" ', ' 0.002*"7"'] 
1 : ['0.243*"0" ', ' 0.158*"3" ', ' 0.152*"8" ', ' 0.150*"2" ', ' 0.147*"5" ', ' 0.080*"6" ', ' 0.059*"1" ', ' 0.006*"9" ', ' 0.003*"7" ', ' 0.002*"4"'] 
2 : ['0.272*"0" ', ' 0.227*"1" ', ' 0.148*"6" ', ' 0.137*"9" ', ' 0.113*"4" ', ' 0.092*"7" ', ' 0.005*"2" ', ' 0.003*"5" ', ' 0.002*"8" ', ' 0.002*"3"'] 
Training Time : topic action mapping is : 
topic0  topic1  topic2
[[ 8.75988251  0.53440613 77.15668106]
 [31.14718321 63.88927725  4.0889926 ]
 [58.86174968  3.27260524 17.58411044]]
Max Acc. :  0.7293447293447294
Acc values :  [0.35327635327635326, 0.07407407407407407, 0.19658119658119658, 0.41595441595441596, 0.23076923076923078, 0.7293447293447294]
Acc values :  [[14, 88, 22], [14, 6, 6], [1, 46, 22], [94, 46, 6], [1, 6, 74], [94, 88, 74]]
perm_tuples :  [(0, 1, 2), (0, 2, 1), (1, 0, 2), (1, 2, 0), (2, 0, 1), (2, 1, 0)]
------------------------------------------------------------
1. v_file ::  ICC WT20 Ireland v Oman Match Highlights
------------------------------------------------------------
2. v_file ::  ICC WT20 Ireland vs Oman Highlights
------------------------------------------------------------
3. v_file ::  ICC WT20 Netherlands vs Ireland Match Highlights
------------------------------------------------------------
4. v_file ::  ICC WT20 New Zealand vs Pakistan - Match Highlights
------------------------------------------------------------
5. v_file ::  ICC WT20 Scotland vs Afghanistan Highlights
Create dataframe BOVW validation set...
Make bow vector for each feature vector
Shape of bovw_dataframe : (105, 10)
Reading IDF weights to disk.
[[ 5.48060444 14.69965613  5.61322999]
 [ 0.         21.70446467  6.9637605 ]
 [ 1.79777724 12.95797718  4.68039167]]
Evaluating on the validation set...
##############################
BOW Classification Results:
90/105 Correct
Accuracy = 0.8571428571428571 
Confusion matrix
[[33.  0.  3.]
 [ 0. 38.  5.]
 [ 6.  1. 19.]]
############################################################
No. of training videos : 16
Size : [4404, 4353, 4036, 4302, 4579, 4497, 4451, 4499, 5057, 4497, 4450, 4473, 4231, 4489, 5046, 4449]
nbins : 30, nClusters : 20 
Loading features from disk...
------------------------------------------------------------
1. v_file ::  ICC WT20 - Afghanistan vs South Africa - Match Highlights
------------------------------------------------------------
2. v_file ::  ICC WT20 - England v Sri Lanka Match Highlights
------------------------------------------------------------
3. v_file ::  ICC WT20 - India vs Australia Highlights
------------------------------------------------------------
4. v_file ::  ICC WT20 - India vs Pakistan Match Highlights
------------------------------------------------------------
5. v_file ::  ICC WT20 - South Africa vs England - Match Highlights
------------------------------------------------------------
6. v_file ::  ICC WT20 Afghanistan vs Zimbabwe Match Highlights
------------------------------------------------------------
7. v_file ::  ICC WT20 Australia vs Bangladesh - Match Highlights
------------------------------------------------------------
8. v_file ::  ICC WT20 Bangladesh v Ireland Match Highlights
------------------------------------------------------------
9. v_file ::  ICC WT20 Bangladesh vs Netherlands Highlights
------------------------------------------------------------
10. v_file ::  ICC WT20 Bangladesh vs Oman Match Highlights
------------------------------------------------------------
11. v_file ::  ICC WT20 England v New Zealand - Semi-Final Highlights
------------------------------------------------------------
12. v_file ::  ICC WT20 Final - England vs West Indies - Match Highlights
------------------------------------------------------------
13. v_file ::  ICC WT20 Hong Kong v Afghanistan Match Highlights
------------------------------------------------------------
14. v_file ::  ICC WT20 Hong Kong v Scotland Highlights
------------------------------------------------------------
15. v_file ::  ICC WT20 Hong Kong vs Zimbabwe Highlights
------------------------------------------------------------
16. v_file ::  ICC WT20 India vs Bangladesh - Match Highlights
INP_VEC_SIZE =  30
Clustering using KMeans: Input size -> (45630, 30) :: n_clusters -> 20
Done Clustering!
Create a dataframe for HOOF features...
Make bow vector for each feature vector
Shape of bovw_dataframe : (351, 20)
Saved IDF weights to disk.
Read 562 ground truth stroke labels from file.
Training stroke labels : 
[0 2 1 0 2 1 0 2 0 2 0 2 0 1 2 2 1 0 0 2 0 2 2 2 2 2 1 1 0 1 2 1 2 0 1 2 0
 1 2 2 0 1 1 0 1 2 1 1 0 2 1 1 2 2 2 1 0 2 2 1 0 1 2 2 0 0 1 1 0 1 0 1 1 0
 0 0 1 1 1 2 2 1 1 2 2 1 0 0 0 1 1 1 0 1 0 1 0 1 2 1 0 0 0 0 2 1 2 0 0 2 0
 2 1 1 1 1 2 0 0 1 2 1 1 1 2 1 2 1 2 1 2 1 1 2 2 1 1 2 0 1 1 2 2 1 1 0 0 1
 1 2 1 1 0 1 1 1 0 2 1 2 2 0 1 1 2 1 0 0 2 1 1 0 1 0 0 2 2 1 1 0 0 2 1 2 1
 0 0 2 2 0 0 1 0 0 1 2 2 1 2 0 1 1 0 0 2 2 1 2 0 2 0 1 0 1 0 2 0 0 2 0 2 0
 0 0 2 1 2 1 0 0 0 2 1 2 0 0 1 1 1 2 2 1 2 1 2 1 1 1 1 2 1 0 0 2 1 1 2 2 1
 0 1 1 0 1 0 0 2 1 2 2 2 1 0 1 1 1 0 0 2 1 2 1 0 0 2 1 0 2 0 0 0 1 1 0 1 0
 0 0 2 1 1 1 0 1 1 0 1 0 1 2 1 1 0 1 0 1 1 1 1 1 2 2 0 1 1 1 0 1 0 0 1 2 2
 1 0 1 0 2 1 1 2 2 2 0 2 0 2 0 1 1 2]
(351,)
............................................................................................................................................................................................................................................................................................................
optimization finished, #iter = 3000

WARNING: reaching max number of iterations
Using -s 2 may be faster (also see FAQ)

Objective value = -90.055586
nSV = 145
............................................................................................................................................................................................................................................................................................................
optimization finished, #iter = 3000

WARNING: reaching max number of iterations
Using -s 2 may be faster (also see FAQ)

Objective value = -71.980142
nSV = 117
............................................................................................................................................................................................................................................................................................................
optimization finished, #iter = 3000

WARNING: reaching max number of iterations
Using -s 2 may be faster (also see FAQ)

Objective value = -128.189382
nSV = 197
/home/arpan/opencv-py3/lib/python3.5/site-packages/sklearn/svm/base.py:931: ConvergenceWarning: Liblinear failed to converge, increase the number of iterations.
  "the number of iterations.", ConvergenceWarning)
[LibLinear]Training dataframe formed.
LDA execution !!! 
printing dictionary after corp  Dictionary(20 unique tokens: ['13', '12', '15', '18', '0']...) 
training complete saving to disk 
0 : ['0.268*"5" ', ' 0.196*"9" ', ' 0.122*"12" ', ' 0.108*"0" ', ' 0.088*"13" ', ' 0.081*"8" ', ' 0.032*"7" ', ' 0.021*"19" ', ' 0.018*"17" ', ' 0.015*"1"'] 
1 : ['0.167*"5" ', ' 0.151*"9" ', ' 0.137*"13" ', ' 0.105*"6" ', ' 0.090*"0" ', ' 0.084*"4" ', ' 0.077*"19" ', ' 0.057*"18" ', ' 0.041*"3" ', ' 0.040*"15"'] 
2 : ['0.166*"5" ', ' 0.125*"2" ', ' 0.111*"10" ', ' 0.110*"9" ', ' 0.081*"13" ', ' 0.074*"1" ', ' 0.071*"7" ', ' 0.069*"11" ', ' 0.063*"17" ', ' 0.053*"12"'] 
Training Time : topic action mapping is : 
topic0  topic1  topic2
[[10.94199982 75.4967086   0.        ]
 [23.95331794  4.20844665 77.21051791]
 [66.72349143 13.94180724  1.80093098]]
Max Acc. :  0.7663817663817664
Acc values :  [0.07692307692307693, 0.38461538461538464, 0.37037037037037035, 0.15669515669515668, 0.7663817663817664, 0.245014245014245]
Acc values :  [[18, 6, 3], [18, 98, 19], [91, 36, 3], [0, 36, 19], [91, 98, 80], [0, 6, 80]]
perm_tuples :  [(0, 1, 2), (0, 2, 1), (1, 0, 2), (1, 2, 0), (2, 0, 1), (2, 1, 0)]
------------------------------------------------------------
1. v_file ::  ICC WT20 Ireland v Oman Match Highlights
------------------------------------------------------------
2. v_file ::  ICC WT20 Ireland vs Oman Highlights
------------------------------------------------------------
3. v_file ::  ICC WT20 Netherlands vs Ireland Match Highlights
------------------------------------------------------------
4. v_file ::  ICC WT20 New Zealand vs Pakistan - Match Highlights
------------------------------------------------------------
5. v_file ::  ICC WT20 Scotland vs Afghanistan Highlights
Create dataframe BOVW validation set...
Make bow vector for each feature vector
Shape of bovw_dataframe : (105, 20)
Reading IDF weights to disk.
[[ 0.         34.23114485  0.        ]
 [ 0.         20.95015022  3.39823115]
 [ 0.         21.15409803  0.        ]]
Evaluating on the validation set...
##############################
BOW Classification Results:
93/105 Correct
Accuracy = 0.8857142857142857 
Confusion matrix
[[33.  0.  0.]
 [ 0. 36.  3.]
 [ 6.  3. 24.]]
############################################################
No. of training videos : 16
Size : [4404, 4353, 4036, 4302, 4579, 4497, 4451, 4499, 5057, 4497, 4450, 4473, 4231, 4489, 5046, 4449]
nbins : 30, nClusters : 30 
Loading features from disk...
------------------------------------------------------------
1. v_file ::  ICC WT20 - Afghanistan vs South Africa - Match Highlights
------------------------------------------------------------
2. v_file ::  ICC WT20 - England v Sri Lanka Match Highlights
------------------------------------------------------------
3. v_file ::  ICC WT20 - India vs Australia Highlights
------------------------------------------------------------
4. v_file ::  ICC WT20 - India vs Pakistan Match Highlights
------------------------------------------------------------
5. v_file ::  ICC WT20 - South Africa vs England - Match Highlights
------------------------------------------------------------
6. v_file ::  ICC WT20 Afghanistan vs Zimbabwe Match Highlights
------------------------------------------------------------
7. v_file ::  ICC WT20 Australia vs Bangladesh - Match Highlights
------------------------------------------------------------
8. v_file ::  ICC WT20 Bangladesh v Ireland Match Highlights
------------------------------------------------------------
9. v_file ::  ICC WT20 Bangladesh vs Netherlands Highlights
------------------------------------------------------------
10. v_file ::  ICC WT20 Bangladesh vs Oman Match Highlights
------------------------------------------------------------
11. v_file ::  ICC WT20 England v New Zealand - Semi-Final Highlights
------------------------------------------------------------
12. v_file ::  ICC WT20 Final - England vs West Indies - Match Highlights
------------------------------------------------------------
13. v_file ::  ICC WT20 Hong Kong v Afghanistan Match Highlights
------------------------------------------------------------
14. v_file ::  ICC WT20 Hong Kong v Scotland Highlights
------------------------------------------------------------
15. v_file ::  ICC WT20 Hong Kong vs Zimbabwe Highlights
------------------------------------------------------------
16. v_file ::  ICC WT20 India vs Bangladesh - Match Highlights
INP_VEC_SIZE =  30
Clustering using KMeans: Input size -> (45630, 30) :: n_clusters -> 30
Done Clustering!
Create a dataframe for HOOF features...
Make bow vector for each feature vector
Shape of bovw_dataframe : (351, 30)
Saved IDF weights to disk.
Read 562 ground truth stroke labels from file.
Training stroke labels : 
[0 2 1 0 2 1 0 2 0 2 0 2 0 1 2 2 1 0 0 2 0 2 2 2 2 2 1 1 0 1 2 1 2 0 1 2 0
 1 2 2 0 1 1 0 1 2 1 1 0 2 1 1 2 2 2 1 0 2 2 1 0 1 2 2 0 0 1 1 0 1 0 1 1 0
 0 0 1 1 1 2 2 1 1 2 2 1 0 0 0 1 1 1 0 1 0 1 0 1 2 1 0 0 0 0 2 1 2 0 0 2 0
 2 1 1 1 1 2 0 0 1 2 1 1 1 2 1 2 1 2 1 2 1 1 2 2 1 1 2 0 1 1 2 2 1 1 0 0 1
 1 2 1 1 0 1 1 1 0 2 1 2 2 0 1 1 2 1 0 0 2 1 1 0 1 0 0 2 2 1 1 0 0 2 1 2 1
 0 0 2 2 0 0 1 0 0 1 2 2 1 2 0 1 1 0 0 2 2 1 2 0 2 0 1 0 1 0 2 0 0 2 0 2 0
 0 0 2 1 2 1 0 0 0 2 1 2 0 0 1 1 1 2 2 1 2 1 2 1 1 1 1 2 1 0 0 2 1 1 2 2 1
 0 1 1 0 1 0 0 2 1 2 2 2 1 0 1 1 1 0 0 2 1 2 1 0 0 2 1 0 2 0 0 0 1 1 0 1 0
 0 0 2 1 1 1 0 1 1 0 1 0 1 2 1 1 0 1 0 1 1 1 1 1 2 2 0 1 1 1 0 1 0 0 1 2 2
 1 0 1 0 2 1 1 2 2 2 0 2 0 2 0 1 1 2]
(351,)
............................................................................................................................................................................................................................................................................................................
optimization finished, #iter = 3000

WARNING: reaching max number of iterations
Using -s 2 may be faster (also see FAQ)

Objective value = -83.736861
nSV = 137
............................................................................................................................................................................................................................................................................................................
optimization finished, #iter = 3000

WARNING: reaching max number of iterations
Using -s 2 may be faster (also see FAQ)

Objective value = -70.112821
nSV = 123
............................................................................................................................................................................................................................................................................................................
optimization finished, #iter = 3000

WARNING: reaching max number of iterations
Using -s 2 may be faster (also see FAQ)

Objective value = -122.637003
nSV = 193
/home/arpan/opencv-py3/lib/python3.5/site-packages/sklearn/svm/base.py:931: ConvergenceWarning: Liblinear failed to converge, increase the number of iterations.
  "the number of iterations.", ConvergenceWarning)
[LibLinear]Training dataframe formed.
LDA execution !!! 
printing dictionary after corp  Dictionary(30 unique tokens: ['12', '5', '24', '15', '28']...) 
training complete saving to disk 
0 : ['0.161*"20" ', ' 0.120*"1" ', ' 0.116*"7" ', ' 0.109*"4" ', ' 0.094*"3" ', ' 0.082*"29" ', ' 0.065*"8" ', ' 0.051*"12" ', ' 0.045*"15" ', ' 0.043*"16"'] 
1 : ['0.169*"20" ', ' 0.158*"1" ', ' 0.105*"8" ', ' 0.089*"16" ', ' 0.074*"17" ', ' 0.037*"10" ', ' 0.035*"28" ', ' 0.034*"21" ', ' 0.033*"24" ', ' 0.029*"12"'] 
2 : ['0.203*"20" ', ' 0.154*"1" ', ' 0.086*"13" ', ' 0.073*"26" ', ' 0.069*"16" ', ' 0.064*"18" ', ' 0.061*"8" ', ' 0.054*"5" ', ' 0.041*"9" ', ' 0.038*"19"'] 
Training Time : topic action mapping is : 
topic0  topic1  topic2
[[ 3.24822497  0.         91.66377041]
 [61.04977027 39.35901725  5.07796729]
 [10.60368103 32.43990728 37.53576481]]
Max Acc. :  0.6353276353276354
Acc values :  [0.301994301994302, 0.14814814814814814, 0.36752136752136755, 0.6353276353276354, 0.06267806267806268, 0.4843304843304843]
Acc values :  [[6, 52, 48], [6, 7, 39], [0, 81, 48], [103, 81, 39], [0, 7, 15], [103, 52, 15]]
perm_tuples :  [(0, 1, 2), (0, 2, 1), (1, 0, 2), (1, 2, 0), (2, 0, 1), (2, 1, 0)]
------------------------------------------------------------
1. v_file ::  ICC WT20 Ireland v Oman Match Highlights
------------------------------------------------------------
2. v_file ::  ICC WT20 Ireland vs Oman Highlights
------------------------------------------------------------
3. v_file ::  ICC WT20 Netherlands vs Ireland Match Highlights
------------------------------------------------------------
4. v_file ::  ICC WT20 New Zealand vs Pakistan - Match Highlights
------------------------------------------------------------
5. v_file ::  ICC WT20 Scotland vs Afghanistan Highlights
Create dataframe BOVW validation set...
Make bow vector for each feature vector
Shape of bovw_dataframe : (105, 30)
Reading IDF weights to disk.
[[ 3.21128595  0.         24.0497697 ]
 [ 1.20294127 10.75739315  8.8932049 ]
 [ 0.4825882   3.78608307 12.20773524]]
Evaluating on the validation set...
##############################
BOW Classification Results:
94/105 Correct
Accuracy = 0.8952380952380953 
Confusion matrix
[[33.  1.  0.]
 [ 1. 37.  3.]
 [ 5.  1. 24.]]
############################################################
No. of training videos : 16
Size : [4404, 4353, 4036, 4302, 4579, 4497, 4451, 4499, 5057, 4497, 4450, 4473, 4231, 4489, 5046, 4449]
nbins : 30, nClusters : 40 
Loading features from disk...
------------------------------------------------------------
1. v_file ::  ICC WT20 - Afghanistan vs South Africa - Match Highlights
------------------------------------------------------------
2. v_file ::  ICC WT20 - England v Sri Lanka Match Highlights
------------------------------------------------------------
3. v_file ::  ICC WT20 - India vs Australia Highlights
------------------------------------------------------------
4. v_file ::  ICC WT20 - India vs Pakistan Match Highlights
------------------------------------------------------------
5. v_file ::  ICC WT20 - South Africa vs England - Match Highlights
------------------------------------------------------------
6. v_file ::  ICC WT20 Afghanistan vs Zimbabwe Match Highlights
------------------------------------------------------------
7. v_file ::  ICC WT20 Australia vs Bangladesh - Match Highlights
------------------------------------------------------------
8. v_file ::  ICC WT20 Bangladesh v Ireland Match Highlights
------------------------------------------------------------
9. v_file ::  ICC WT20 Bangladesh vs Netherlands Highlights
------------------------------------------------------------
10. v_file ::  ICC WT20 Bangladesh vs Oman Match Highlights
------------------------------------------------------------
11. v_file ::  ICC WT20 England v New Zealand - Semi-Final Highlights
------------------------------------------------------------
12. v_file ::  ICC WT20 Final - England vs West Indies - Match Highlights
------------------------------------------------------------
13. v_file ::  ICC WT20 Hong Kong v Afghanistan Match Highlights
------------------------------------------------------------
14. v_file ::  ICC WT20 Hong Kong v Scotland Highlights
------------------------------------------------------------
15. v_file ::  ICC WT20 Hong Kong vs Zimbabwe Highlights
------------------------------------------------------------
16. v_file ::  ICC WT20 India vs Bangladesh - Match Highlights
INP_VEC_SIZE =  30
Clustering using KMeans: Input size -> (45630, 30) :: n_clusters -> 40
Done Clustering!
Create a dataframe for HOOF features...
Make bow vector for each feature vector
Shape of bovw_dataframe : (351, 40)
Saved IDF weights to disk.
Read 562 ground truth stroke labels from file.
Training stroke labels : 
[0 2 1 0 2 1 0 2 0 2 0 2 0 1 2 2 1 0 0 2 0 2 2 2 2 2 1 1 0 1 2 1 2 0 1 2 0
 1 2 2 0 1 1 0 1 2 1 1 0 2 1 1 2 2 2 1 0 2 2 1 0 1 2 2 0 0 1 1 0 1 0 1 1 0
 0 0 1 1 1 2 2 1 1 2 2 1 0 0 0 1 1 1 0 1 0 1 0 1 2 1 0 0 0 0 2 1 2 0 0 2 0
 2 1 1 1 1 2 0 0 1 2 1 1 1 2 1 2 1 2 1 2 1 1 2 2 1 1 2 0 1 1 2 2 1 1 0 0 1
 1 2 1 1 0 1 1 1 0 2 1 2 2 0 1 1 2 1 0 0 2 1 1 0 1 0 0 2 2 1 1 0 0 2 1 2 1
 0 0 2 2 0 0 1 0 0 1 2 2 1 2 0 1 1 0 0 2 2 1 2 0 2 0 1 0 1 0 2 0 0 2 0 2 0
 0 0 2 1 2 1 0 0 0 2 1 2 0 0 1 1 1 2 2 1 2 1 2 1 1 1 1 2 1 0 0 2 1 1 2 2 1
 0 1 1 0 1 0 0 2 1 2 2 2 1 0 1 1 1 0 0 2 1 2 1 0 0 2 1 0 2 0 0 0 1 1 0 1 0
 0 0 2 1 1 1 0 1 1 0 1 0 1 2 1 1 0 1 0 1 1 1 1 1 2 2 0 1 1 1 0 1 0 0 1 2 2
 1 0 1 0 2 1 1 2 2 2 0 2 0 2 0 1 1 2]
(351,)
............................................................................................................................................................................................................................................................................................................
optimization finished, #iter = 3000

WARNING: reaching max number of iterations
Using -s 2 may be faster (also see FAQ)

Objective value = -63.652689
nSV = 103
............................................................................................................................................................................................................................................................................................................
optimization finished, #iter = 3000

WARNING: reaching max number of iterations
Using -s 2 may be faster (also see FAQ)

Objective value = -58.955318
nSV = 113
............................................................................................................................................................................................................................................................................................................
optimization finished, #iter = 3000

WARNING: reaching max number of iterations
Using -s 2 may be faster (also see FAQ)

Objective value = -101.510559
nSV = 161
/home/arpan/opencv-py3/lib/python3.5/site-packages/sklearn/svm/base.py:931: ConvergenceWarning: Liblinear failed to converge, increase the number of iterations.
  "the number of iterations.", ConvergenceWarning)
[LibLinear]Training dataframe formed.
LDA execution !!! 
printing dictionary after corp  Dictionary(40 unique tokens: ['12', '39', '30', '32', '7']...) 
training complete saving to disk 
0 : ['0.108*"10" ', ' 0.085*"3" ', ' 0.068*"19" ', ' 0.067*"22" ', ' 0.063*"5" ', ' 0.053*"34" ', ' 0.050*"9" ', ' 0.044*"0" ', ' 0.040*"31" ', ' 0.038*"7"'] 
1 : ['0.177*"10" ', ' 0.146*"19" ', ' 0.094*"4" ', ' 0.088*"37" ', ' 0.081*"22" ', ' 0.048*"34" ', ' 0.044*"2" ', ' 0.037*"7" ', ' 0.028*"9" ', ' 0.027*"29"'] 
2 : ['0.143*"10" ', ' 0.084*"19" ', ' 0.080*"32" ', ' 0.066*"38" ', ' 0.063*"8" ', ' 0.054*"11" ', ' 0.053*"2" ', ' 0.048*"4" ', ' 0.046*"6" ', ' 0.044*"34"'] 
Training Time : topic action mapping is : 
topic0  topic1  topic2
[[ 0.         16.95930082 69.22669891]
 [74.03517914 28.86762825  3.58695883]
 [ 8.45773762 63.07487014 12.72477084]]
Max Acc. :  0.7065527065527065
Acc values :  [0.16809116809116809, 0.2222222222222222, 0.3903133903133903, 0.7065527065527065, 0.12535612535612536, 0.38746438746438744]
Acc values :  [[0, 42, 17], [0, 5, 73], [27, 93, 17], [82, 93, 73], [27, 5, 12], [82, 42, 12]]
perm_tuples :  [(0, 1, 2), (0, 2, 1), (1, 0, 2), (1, 2, 0), (2, 0, 1), (2, 1, 0)]
------------------------------------------------------------
1. v_file ::  ICC WT20 Ireland v Oman Match Highlights
------------------------------------------------------------
2. v_file ::  ICC WT20 Ireland vs Oman Highlights
------------------------------------------------------------
3. v_file ::  ICC WT20 Netherlands vs Ireland Match Highlights
------------------------------------------------------------
4. v_file ::  ICC WT20 New Zealand vs Pakistan - Match Highlights
------------------------------------------------------------
5. v_file ::  ICC WT20 Scotland vs Afghanistan Highlights
Create dataframe BOVW validation set...
Make bow vector for each feature vector
Shape of bovw_dataframe : (105, 40)
Reading IDF weights to disk.
[[ 6.46153259 12.58809844  4.70298281]
 [15.79572114  1.34375998  4.78832847]
 [ 1.28811172  5.31487045 10.46934873]]
Evaluating on the validation set...
##############################
BOW Classification Results:
91/105 Correct
Accuracy = 0.8666666666666667 
Confusion matrix
[[31.  0.  1.]
 [ 2. 38.  4.]
 [ 6.  1. 22.]]
############################################################
No. of training videos : 16
Size : [4404, 4353, 4036, 4302, 4579, 4497, 4451, 4499, 5057, 4497, 4450, 4473, 4231, 4489, 5046, 4449]
nbins : 30, nClusters : 50 
Loading features from disk...
------------------------------------------------------------
1. v_file ::  ICC WT20 - Afghanistan vs South Africa - Match Highlights
------------------------------------------------------------
2. v_file ::  ICC WT20 - England v Sri Lanka Match Highlights
------------------------------------------------------------
3. v_file ::  ICC WT20 - India vs Australia Highlights
------------------------------------------------------------
4. v_file ::  ICC WT20 - India vs Pakistan Match Highlights
------------------------------------------------------------
5. v_file ::  ICC WT20 - South Africa vs England - Match Highlights
------------------------------------------------------------
6. v_file ::  ICC WT20 Afghanistan vs Zimbabwe Match Highlights
------------------------------------------------------------
7. v_file ::  ICC WT20 Australia vs Bangladesh - Match Highlights
------------------------------------------------------------
8. v_file ::  ICC WT20 Bangladesh v Ireland Match Highlights
------------------------------------------------------------
9. v_file ::  ICC WT20 Bangladesh vs Netherlands Highlights
------------------------------------------------------------
10. v_file ::  ICC WT20 Bangladesh vs Oman Match Highlights
------------------------------------------------------------
11. v_file ::  ICC WT20 England v New Zealand - Semi-Final Highlights
------------------------------------------------------------
12. v_file ::  ICC WT20 Final - England vs West Indies - Match Highlights
------------------------------------------------------------
13. v_file ::  ICC WT20 Hong Kong v Afghanistan Match Highlights
------------------------------------------------------------
14. v_file ::  ICC WT20 Hong Kong v Scotland Highlights
------------------------------------------------------------
15. v_file ::  ICC WT20 Hong Kong vs Zimbabwe Highlights
------------------------------------------------------------
16. v_file ::  ICC WT20 India vs Bangladesh - Match Highlights
INP_VEC_SIZE =  30
Clustering using KMeans: Input size -> (45630, 30) :: n_clusters -> 50
Done Clustering!
Create a dataframe for HOOF features...
Make bow vector for each feature vector
Shape of bovw_dataframe : (351, 50)
Saved IDF weights to disk.
Read 562 ground truth stroke labels from file.
Training stroke labels : 
[0 2 1 0 2 1 0 2 0 2 0 2 0 1 2 2 1 0 0 2 0 2 2 2 2 2 1 1 0 1 2 1 2 0 1 2 0
 1 2 2 0 1 1 0 1 2 1 1 0 2 1 1 2 2 2 1 0 2 2 1 0 1 2 2 0 0 1 1 0 1 0 1 1 0
 0 0 1 1 1 2 2 1 1 2 2 1 0 0 0 1 1 1 0 1 0 1 0 1 2 1 0 0 0 0 2 1 2 0 0 2 0
 2 1 1 1 1 2 0 0 1 2 1 1 1 2 1 2 1 2 1 2 1 1 2 2 1 1 2 0 1 1 2 2 1 1 0 0 1
 1 2 1 1 0 1 1 1 0 2 1 2 2 0 1 1 2 1 0 0 2 1 1 0 1 0 0 2 2 1 1 0 0 2 1 2 1
 0 0 2 2 0 0 1 0 0 1 2 2 1 2 0 1 1 0 0 2 2 1 2 0 2 0 1 0 1 0 2 0 0 2 0 2 0
 0 0 2 1 2 1 0 0 0 2 1 2 0 0 1 1 1 2 2 1 2 1 2 1 1 1 1 2 1 0 0 2 1 1 2 2 1
 0 1 1 0 1 0 0 2 1 2 2 2 1 0 1 1 1 0 0 2 1 2 1 0 0 2 1 0 2 0 0 0 1 1 0 1 0
 0 0 2 1 1 1 0 1 1 0 1 0 1 2 1 1 0 1 0 1 1 1 1 1 2 2 0 1 1 1 0 1 0 0 1 2 2
 1 0 1 0 2 1 1 2 2 2 0 2 0 2 0 1 1 2]
(351,)
............................................................................................................................................................................................................................................................................................................
optimization finished, #iter = 3000

WARNING: reaching max number of iterations
Using -s 2 may be faster (also see FAQ)

Objective value = -47.954123
nSV = 84
............................................................................................................................................................................................................................................................................................................
optimization finished, #iter = 3000

WARNING: reaching max number of iterations
Using -s 2 may be faster (also see FAQ)

Objective value = -50.156668
nSV = 97
............................................................................................................................................................................................................................................................................................................
optimization finished, #iter = 3000

WARNING: reaching max number of iterations
Using -s 2 may be faster (also see FAQ)

Objective value = -98.648825
nSV = 153
/home/arpan/opencv-py3/lib/python3.5/site-packages/sklearn/svm/base.py:931: ConvergenceWarning: Liblinear failed to converge, increase the number of iterations.
  "the number of iterations.", ConvergenceWarning)
[LibLinear]Training dataframe formed.
LDA execution !!! 
printing dictionary after corp  Dictionary(50 unique tokens: ['45', '5', '32', '47', '43']...) 
training complete saving to disk 
0 : ['0.110*"32" ', ' 0.101*"35" ', ' 0.100*"9" ', ' 0.096*"2" ', ' 0.071*"44" ', ' 0.065*"38" ', ' 0.042*"12" ', ' 0.039*"1" ', ' 0.032*"20" ', ' 0.026*"4"'] 
1 : ['0.082*"9" ', ' 0.077*"32" ', ' 0.063*"45" ', ' 0.061*"35" ', ' 0.056*"7" ', ' 0.051*"6" ', ' 0.045*"11" ', ' 0.042*"44" ', ' 0.038*"2" ', ' 0.038*"41"'] 
2 : ['0.112*"9" ', ' 0.084*"32" ', ' 0.079*"35" ', ' 0.057*"4" ', ' 0.050*"0" ', ' 0.050*"48" ', ' 0.048*"20" ', ' 0.048*"12" ', ' 0.047*"43" ', ' 0.046*"5"'] 
Training Time : topic action mapping is : 
topic0  topic1  topic2
[[ 20.77307132   0.62843782  61.52373469]
 [  7.03280365 102.07863462   6.77679744]
 [ 47.98400429  10.46674982  20.24594903]]
Max Acc. :  0.7293447293447294
Acc values :  [0.5014245014245015, 0.15954415954415954, 0.1111111111111111, 0.29914529914529914, 0.19943019943019943, 0.7293447293447294]
Acc values :  [[30, 119, 27], [30, 10, 16], [1, 11, 27], [78, 11, 16], [1, 10, 59], [78, 119, 59]]
perm_tuples :  [(0, 1, 2), (0, 2, 1), (1, 0, 2), (1, 2, 0), (2, 0, 1), (2, 1, 0)]
------------------------------------------------------------
1. v_file ::  ICC WT20 Ireland v Oman Match Highlights
------------------------------------------------------------
2. v_file ::  ICC WT20 Ireland vs Oman Highlights
------------------------------------------------------------
3. v_file ::  ICC WT20 Netherlands vs Ireland Match Highlights
------------------------------------------------------------
4. v_file ::  ICC WT20 New Zealand vs Pakistan - Match Highlights
------------------------------------------------------------
5. v_file ::  ICC WT20 Scotland vs Afghanistan Highlights
Create dataframe BOVW validation set...
Make bow vector for each feature vector
Shape of bovw_dataframe : (105, 50)
Reading IDF weights to disk.
[[17.21285093  1.71754023  2.87245753]
 [13.8911182   8.62802762  0.57891399]
 [ 8.66310409  7.12828243  0.41078365]]
Evaluating on the validation set...
##############################
BOW Classification Results:
90/105 Correct
Accuracy = 0.8571428571428571 
Confusion matrix
[[34.  0.  1.]
 [ 0. 35.  5.]
 [ 5.  4. 21.]]
############################################################
No. of training videos : 16
Size : [4404, 4353, 4036, 4302, 4579, 4497, 4451, 4499, 5057, 4497, 4450, 4473, 4231, 4489, 5046, 4449]
nbins : 40, nClusters : 10 
Loading features from disk...
------------------------------------------------------------
1. v_file ::  ICC WT20 - Afghanistan vs South Africa - Match Highlights
------------------------------------------------------------
2. v_file ::  ICC WT20 - England v Sri Lanka Match Highlights
------------------------------------------------------------
3. v_file ::  ICC WT20 - India vs Australia Highlights
------------------------------------------------------------
4. v_file ::  ICC WT20 - India vs Pakistan Match Highlights
------------------------------------------------------------
5. v_file ::  ICC WT20 - South Africa vs England - Match Highlights
------------------------------------------------------------
6. v_file ::  ICC WT20 Afghanistan vs Zimbabwe Match Highlights
------------------------------------------------------------
7. v_file ::  ICC WT20 Australia vs Bangladesh - Match Highlights
------------------------------------------------------------
8. v_file ::  ICC WT20 Bangladesh v Ireland Match Highlights
------------------------------------------------------------
9. v_file ::  ICC WT20 Bangladesh vs Netherlands Highlights
------------------------------------------------------------
10. v_file ::  ICC WT20 Bangladesh vs Oman Match Highlights
------------------------------------------------------------
11. v_file ::  ICC WT20 England v New Zealand - Semi-Final Highlights
------------------------------------------------------------
12. v_file ::  ICC WT20 Final - England vs West Indies - Match Highlights
------------------------------------------------------------
13. v_file ::  ICC WT20 Hong Kong v Afghanistan Match Highlights
------------------------------------------------------------
14. v_file ::  ICC WT20 Hong Kong v Scotland Highlights
------------------------------------------------------------
15. v_file ::  ICC WT20 Hong Kong vs Zimbabwe Highlights
------------------------------------------------------------
16. v_file ::  ICC WT20 India vs Bangladesh - Match Highlights
INP_VEC_SIZE =  40
Clustering using KMeans: Input size -> (45630, 40) :: n_clusters -> 10
Done Clustering!
Create a dataframe for HOOF features...
Make bow vector for each feature vector
Shape of bovw_dataframe : (351, 10)
Saved IDF weights to disk.
Read 562 ground truth stroke labels from file.
Training stroke labels : 
[0 2 1 0 2 1 0 2 0 2 0 2 0 1 2 2 1 0 0 2 0 2 2 2 2 2 1 1 0 1 2 1 2 0 1 2 0
 1 2 2 0 1 1 0 1 2 1 1 0 2 1 1 2 2 2 1 0 2 2 1 0 1 2 2 0 0 1 1 0 1 0 1 1 0
 0 0 1 1 1 2 2 1 1 2 2 1 0 0 0 1 1 1 0 1 0 1 0 1 2 1 0 0 0 0 2 1 2 0 0 2 0
 2 1 1 1 1 2 0 0 1 2 1 1 1 2 1 2 1 2 1 2 1 1 2 2 1 1 2 0 1 1 2 2 1 1 0 0 1
 1 2 1 1 0 1 1 1 0 2 1 2 2 0 1 1 2 1 0 0 2 1 1 0 1 0 0 2 2 1 1 0 0 2 1 2 1
 0 0 2 2 0 0 1 0 0 1 2 2 1 2 0 1 1 0 0 2 2 1 2 0 2 0 1 0 1 0 2 0 0 2 0 2 0
 0 0 2 1 2 1 0 0 0 2 1 2 0 0 1 1 1 2 2 1 2 1 2 1 1 1 1 2 1 0 0 2 1 1 2 2 1
 0 1 1 0 1 0 0 2 1 2 2 2 1 0 1 1 1 0 0 2 1 2 1 0 0 2 1 0 2 0 0 0 1 1 0 1 0
 0 0 2 1 1 1 0 1 1 0 1 0 1 2 1 1 0 1 0 1 1 1 1 1 2 2 0 1 1 1 0 1 0 0 1 2 2
 1 0 1 0 2 1 1 2 2 2 0 2 0 2 0 1 1 2]
(351,)
............................................................................................................................................................................................................................................................................................................
optimization finished, #iter = 3000

WARNING: reaching max number of iterations
Using -s 2 may be faster (also see FAQ)

Objective value = -116.330222
nSV = 178
............................................................................................................................................................................................................................................................................................................
optimization finished, #iter = 3000

WARNING: reaching max number of iterations
Using -s 2 may be faster (also see FAQ)

Objective value = -102.817441
nSV = 167
............................................................................................................................................................................................................................................................................................................
optimization finished, #iter = 3000

WARNING: reaching max number of iterations
Using -s 2 may be faster (also see FAQ)

Objective value = -159.404709
nSV = 236
/home/arpan/opencv-py3/lib/python3.5/site-packages/sklearn/svm/base.py:931: ConvergenceWarning: Liblinear failed to converge, increase the number of iterations.
  "the number of iterations.", ConvergenceWarning)
[LibLinear]Training dataframe formed.
LDA execution !!! 
printing dictionary after corp  Dictionary(10 unique tokens: ['6', '1', '8', '3', '0']...) 
training complete saving to disk 
0 : ['0.324*"0" ', ' 0.231*"6" ', ' 0.152*"8" ', ' 0.099*"2" ', ' 0.090*"3" ', ' 0.081*"7" ', ' 0.010*"5" ', ' 0.007*"1" ', ' 0.004*"4" ', ' 0.004*"9"'] 
1 : ['0.450*"3" ', ' 0.368*"0" ', ' 0.095*"6" ', ' 0.022*"8" ', ' 0.020*"9" ', ' 0.017*"7" ', ' 0.010*"2" ', ' 0.009*"4" ', ' 0.005*"1" ', ' 0.003*"5"'] 
2 : ['0.306*"0" ', ' 0.161*"3" ', ' 0.148*"4" ', ' 0.132*"9" ', ' 0.096*"5" ', ' 0.095*"1" ', ' 0.055*"6" ', ' 0.005*"8" ', ' 0.001*"7" ', ' 0.001*"2"'] 
Training Time : topic action mapping is : 
topic0  topic1  topic2
[[57.17394474 18.61354712  1.63683635]
 [ 2.91772103 19.5840072  83.96077237]
 [18.49957207 49.46484727 10.91668925]]
Max Acc. :  0.6866096866096866
Acc values :  [0.3561253561253561, 0.6866096866096866, 0.14814814814814814, 0.1908831908831909, 0.452991452991453, 0.16524216524216523]
Acc values :  [[76, 31, 18], [76, 105, 60], [30, 4, 18], [3, 4, 60], [30, 105, 24], [3, 31, 24]]
perm_tuples :  [(0, 1, 2), (0, 2, 1), (1, 0, 2), (1, 2, 0), (2, 0, 1), (2, 1, 0)]
------------------------------------------------------------
1. v_file ::  ICC WT20 Ireland v Oman Match Highlights
------------------------------------------------------------
2. v_file ::  ICC WT20 Ireland vs Oman Highlights
------------------------------------------------------------
3. v_file ::  ICC WT20 Netherlands vs Ireland Match Highlights
------------------------------------------------------------
4. v_file ::  ICC WT20 New Zealand vs Pakistan - Match Highlights
------------------------------------------------------------
5. v_file ::  ICC WT20 Scotland vs Afghanistan Highlights
Create dataframe BOVW validation set...
Make bow vector for each feature vector
Shape of bovw_dataframe : (105, 10)
Reading IDF weights to disk.
[[17.3725377   1.2300843   8.57162774]
 [ 0.54504722  0.         31.3182916 ]
 [ 4.91006827  0.         15.54810858]]
Evaluating on the validation set...
##############################
BOW Classification Results:
88/105 Correct
Accuracy = 0.8380952380952381 
Confusion matrix
[[31.  0.  4.]
 [ 1. 39.  5.]
 [ 7.  0. 18.]]
############################################################
No. of training videos : 16
Size : [4404, 4353, 4036, 4302, 4579, 4497, 4451, 4499, 5057, 4497, 4450, 4473, 4231, 4489, 5046, 4449]
nbins : 40, nClusters : 20 
Loading features from disk...
------------------------------------------------------------
1. v_file ::  ICC WT20 - Afghanistan vs South Africa - Match Highlights
------------------------------------------------------------
2. v_file ::  ICC WT20 - England v Sri Lanka Match Highlights
------------------------------------------------------------
3. v_file ::  ICC WT20 - India vs Australia Highlights
------------------------------------------------------------
4. v_file ::  ICC WT20 - India vs Pakistan Match Highlights
------------------------------------------------------------
5. v_file ::  ICC WT20 - South Africa vs England - Match Highlights
------------------------------------------------------------
6. v_file ::  ICC WT20 Afghanistan vs Zimbabwe Match Highlights
------------------------------------------------------------
7. v_file ::  ICC WT20 Australia vs Bangladesh - Match Highlights
------------------------------------------------------------
8. v_file ::  ICC WT20 Bangladesh v Ireland Match Highlights
------------------------------------------------------------
9. v_file ::  ICC WT20 Bangladesh vs Netherlands Highlights
------------------------------------------------------------
10. v_file ::  ICC WT20 Bangladesh vs Oman Match Highlights
------------------------------------------------------------
11. v_file ::  ICC WT20 England v New Zealand - Semi-Final Highlights
------------------------------------------------------------
12. v_file ::  ICC WT20 Final - England vs West Indies - Match Highlights
------------------------------------------------------------
13. v_file ::  ICC WT20 Hong Kong v Afghanistan Match Highlights
------------------------------------------------------------
14. v_file ::  ICC WT20 Hong Kong v Scotland Highlights
------------------------------------------------------------
15. v_file ::  ICC WT20 Hong Kong vs Zimbabwe Highlights
------------------------------------------------------------
16. v_file ::  ICC WT20 India vs Bangladesh - Match Highlights
INP_VEC_SIZE =  40
Clustering using KMeans: Input size -> (45630, 40) :: n_clusters -> 20
Done Clustering!
Create a dataframe for HOOF features...
Make bow vector for each feature vector
Shape of bovw_dataframe : (351, 20)
Saved IDF weights to disk.
Read 562 ground truth stroke labels from file.
Training stroke labels : 
[0 2 1 0 2 1 0 2 0 2 0 2 0 1 2 2 1 0 0 2 0 2 2 2 2 2 1 1 0 1 2 1 2 0 1 2 0
 1 2 2 0 1 1 0 1 2 1 1 0 2 1 1 2 2 2 1 0 2 2 1 0 1 2 2 0 0 1 1 0 1 0 1 1 0
 0 0 1 1 1 2 2 1 1 2 2 1 0 0 0 1 1 1 0 1 0 1 0 1 2 1 0 0 0 0 2 1 2 0 0 2 0
 2 1 1 1 1 2 0 0 1 2 1 1 1 2 1 2 1 2 1 2 1 1 2 2 1 1 2 0 1 1 2 2 1 1 0 0 1
 1 2 1 1 0 1 1 1 0 2 1 2 2 0 1 1 2 1 0 0 2 1 1 0 1 0 0 2 2 1 1 0 0 2 1 2 1
 0 0 2 2 0 0 1 0 0 1 2 2 1 2 0 1 1 0 0 2 2 1 2 0 2 0 1 0 1 0 2 0 0 2 0 2 0
 0 0 2 1 2 1 0 0 0 2 1 2 0 0 1 1 1 2 2 1 2 1 2 1 1 1 1 2 1 0 0 2 1 1 2 2 1
 0 1 1 0 1 0 0 2 1 2 2 2 1 0 1 1 1 0 0 2 1 2 1 0 0 2 1 0 2 0 0 0 1 1 0 1 0
 0 0 2 1 1 1 0 1 1 0 1 0 1 2 1 1 0 1 0 1 1 1 1 1 2 2 0 1 1 1 0 1 0 0 1 2 2
 1 0 1 0 2 1 1 2 2 2 0 2 0 2 0 1 1 2]
(351,)
............................................................................................................................................................................................................................................................................................................
optimization finished, #iter = 3000

WARNING: reaching max number of iterations
Using -s 2 may be faster (also see FAQ)

Objective value = -89.849622
nSV = 149
............................................................................................................................................................................................................................................................................................................
optimization finished, #iter = 3000

WARNING: reaching max number of iterations
Using -s 2 may be faster (also see FAQ)

Objective value = -78.416262
nSV = 130
............................................................................................................................................................................................................................................................................................................
optimization finished, #iter = 3000

WARNING: reaching max number of iterations
Using -s 2 may be faster (also see FAQ)

Objective value = -124.973910
nSV = 198
/home/arpan/opencv-py3/lib/python3.5/site-packages/sklearn/svm/base.py:931: ConvergenceWarning: Liblinear failed to converge, increase the number of iterations.
  "the number of iterations.", ConvergenceWarning)
[LibLinear]Training dataframe formed.
LDA execution !!! 
printing dictionary after corp  Dictionary(20 unique tokens: ['17', '12', '18', '0', '19']...) 
training complete saving to disk 
0 : ['0.230*"3" ', ' 0.152*"10" ', ' 0.120*"1" ', ' 0.111*"6" ', ' 0.064*"4" ', ' 0.062*"9" ', ' 0.050*"2" ', ' 0.048*"5" ', ' 0.043*"17" ', ' 0.037*"18"'] 
1 : ['0.228*"1" ', ' 0.183*"2" ', ' 0.143*"5" ', ' 0.091*"9" ', ' 0.090*"4" ', ' 0.056*"13" ', ' 0.053*"15" ', ' 0.043*"8" ', ' 0.035*"0" ', ' 0.033*"16"'] 
2 : ['0.276*"1" ', ' 0.145*"9" ', ' 0.099*"18" ', ' 0.082*"2" ', ' 0.076*"14" ', ' 0.074*"12" ', ' 0.046*"5" ', ' 0.040*"19" ', ' 0.027*"4" ', ' 0.027*"10"'] 
Training Time : topic action mapping is : 
topic0  topic1  topic2
[[ 0.         95.61573097  1.68763956]
 [22.39315218  7.61321661 71.22480896]
 [ 0.         37.61845437 45.64972633]]
Max Acc. :  0.5726495726495726
Acc values :  [0.1908831908831909, 0.4045584045584046, 0.5527065527065527, 0.23646723646723647, 0.5726495726495726, 0.042735042735042736]
Acc values :  [[0, 12, 55], [0, 95, 47], [106, 33, 55], [3, 33, 47], [106, 95, 0], [3, 12, 0]]
perm_tuples :  [(0, 1, 2), (0, 2, 1), (1, 0, 2), (1, 2, 0), (2, 0, 1), (2, 1, 0)]
------------------------------------------------------------
1. v_file ::  ICC WT20 Ireland v Oman Match Highlights
------------------------------------------------------------
2. v_file ::  ICC WT20 Ireland vs Oman Highlights
------------------------------------------------------------
3. v_file ::  ICC WT20 Netherlands vs Ireland Match Highlights
------------------------------------------------------------
4. v_file ::  ICC WT20 New Zealand vs Pakistan - Match Highlights
------------------------------------------------------------
5. v_file ::  ICC WT20 Scotland vs Afghanistan Highlights
Create dataframe BOVW validation set...
Make bow vector for each feature vector
Shape of bovw_dataframe : (105, 20)
Reading IDF weights to disk.
[[ 1.99259859 20.2726298   3.12751865]
 [ 5.40219274  2.068544   17.68172523]
 [ 4.96106693  5.05900219  5.84539983]]
Evaluating on the validation set...
##############################
BOW Classification Results:
90/105 Correct
Accuracy = 0.8571428571428571 
Confusion matrix
[[31.  1.  0.]
 [ 0. 35.  3.]
 [ 8.  3. 24.]]
############################################################
No. of training videos : 16
Size : [4404, 4353, 4036, 4302, 4579, 4497, 4451, 4499, 5057, 4497, 4450, 4473, 4231, 4489, 5046, 4449]
nbins : 40, nClusters : 30 
Loading features from disk...
------------------------------------------------------------
1. v_file ::  ICC WT20 - Afghanistan vs South Africa - Match Highlights
------------------------------------------------------------
2. v_file ::  ICC WT20 - England v Sri Lanka Match Highlights
------------------------------------------------------------
3. v_file ::  ICC WT20 - India vs Australia Highlights
------------------------------------------------------------
4. v_file ::  ICC WT20 - India vs Pakistan Match Highlights
------------------------------------------------------------
5. v_file ::  ICC WT20 - South Africa vs England - Match Highlights
------------------------------------------------------------
6. v_file ::  ICC WT20 Afghanistan vs Zimbabwe Match Highlights
------------------------------------------------------------
7. v_file ::  ICC WT20 Australia vs Bangladesh - Match Highlights
------------------------------------------------------------
8. v_file ::  ICC WT20 Bangladesh v Ireland Match Highlights
------------------------------------------------------------
9. v_file ::  ICC WT20 Bangladesh vs Netherlands Highlights
------------------------------------------------------------
10. v_file ::  ICC WT20 Bangladesh vs Oman Match Highlights
------------------------------------------------------------
11. v_file ::  ICC WT20 England v New Zealand - Semi-Final Highlights
------------------------------------------------------------
12. v_file ::  ICC WT20 Final - England vs West Indies - Match Highlights
------------------------------------------------------------
13. v_file ::  ICC WT20 Hong Kong v Afghanistan Match Highlights
------------------------------------------------------------
14. v_file ::  ICC WT20 Hong Kong v Scotland Highlights
------------------------------------------------------------
15. v_file ::  ICC WT20 Hong Kong vs Zimbabwe Highlights
------------------------------------------------------------
16. v_file ::  ICC WT20 India vs Bangladesh - Match Highlights
INP_VEC_SIZE =  40
Clustering using KMeans: Input size -> (45630, 40) :: n_clusters -> 30
Done Clustering!
Create a dataframe for HOOF features...
Make bow vector for each feature vector
Shape of bovw_dataframe : (351, 30)
Saved IDF weights to disk.
Read 562 ground truth stroke labels from file.
Training stroke labels : 
[0 2 1 0 2 1 0 2 0 2 0 2 0 1 2 2 1 0 0 2 0 2 2 2 2 2 1 1 0 1 2 1 2 0 1 2 0
 1 2 2 0 1 1 0 1 2 1 1 0 2 1 1 2 2 2 1 0 2 2 1 0 1 2 2 0 0 1 1 0 1 0 1 1 0
 0 0 1 1 1 2 2 1 1 2 2 1 0 0 0 1 1 1 0 1 0 1 0 1 2 1 0 0 0 0 2 1 2 0 0 2 0
 2 1 1 1 1 2 0 0 1 2 1 1 1 2 1 2 1 2 1 2 1 1 2 2 1 1 2 0 1 1 2 2 1 1 0 0 1
 1 2 1 1 0 1 1 1 0 2 1 2 2 0 1 1 2 1 0 0 2 1 1 0 1 0 0 2 2 1 1 0 0 2 1 2 1
 0 0 2 2 0 0 1 0 0 1 2 2 1 2 0 1 1 0 0 2 2 1 2 0 2 0 1 0 1 0 2 0 0 2 0 2 0
 0 0 2 1 2 1 0 0 0 2 1 2 0 0 1 1 1 2 2 1 2 1 2 1 1 1 1 2 1 0 0 2 1 1 2 2 1
 0 1 1 0 1 0 0 2 1 2 2 2 1 0 1 1 1 0 0 2 1 2 1 0 0 2 1 0 2 0 0 0 1 1 0 1 0
 0 0 2 1 1 1 0 1 1 0 1 0 1 2 1 1 0 1 0 1 1 1 1 1 2 2 0 1 1 1 0 1 0 0 1 2 2
 1 0 1 0 2 1 1 2 2 2 0 2 0 2 0 1 1 2]
(351,)
............................................................................................................................................................................................................................................................................................................
optimization finished, #iter = 3000

WARNING: reaching max number of iterations
Using -s 2 may be faster (also see FAQ)

Objective value = -83.964256
nSV = 133
............................................................................................................................................................................................................................................................................................................
optimization finished, #iter = 3000

WARNING: reaching max number of iterations
Using -s 2 may be faster (also see FAQ)

Objective value = -67.313539
nSV = 112
............................................................................................................................................................................................................................................................................................................
optimization finished, #iter = 3000

WARNING: reaching max number of iterations
Using -s 2 may be faster (also see FAQ)

Objective value = -126.626855
nSV = 187
/home/arpan/opencv-py3/lib/python3.5/site-packages/sklearn/svm/base.py:931: ConvergenceWarning: Liblinear failed to converge, increase the number of iterations.
  "the number of iterations.", ConvergenceWarning)
[LibLinear]Training dataframe formed.
LDA execution !!! 
printing dictionary after corp  Dictionary(30 unique tokens: ['12', '5', '24', '15', '28']...) 
training complete saving to disk 
0 : ['0.225*"0" ', ' 0.220*"24" ', ' 0.110*"8" ', ' 0.096*"12" ', ' 0.067*"1" ', ' 0.054*"23" ', ' 0.048*"2" ', ' 0.040*"11" ', ' 0.028*"25" ', ' 0.025*"15"'] 
1 : ['0.175*"0" ', ' 0.103*"24" ', ' 0.094*"8" ', ' 0.085*"15" ', ' 0.069*"5" ', ' 0.061*"6" ', ' 0.058*"12" ', ' 0.054*"22" ', ' 0.053*"17" ', ' 0.039*"16"'] 
2 : ['0.153*"0" ', ' 0.084*"24" ', ' 0.073*"23" ', ' 0.062*"4" ', ' 0.053*"25" ', ' 0.052*"8" ', ' 0.051*"11" ', ' 0.051*"12" ', ' 0.051*"3" ', ' 0.046*"9"'] 
Training Time : topic action mapping is : 
topic0  topic1  topic2
[[18.26168919 64.24419051  1.79534566]
 [14.56455597  3.00143871 95.16164988]
 [63.98724097  8.97388756  9.0622519 ]]
Max Acc. :  0.7692307692307693
Acc values :  [0.1282051282051282, 0.4415954415954416, 0.3190883190883191, 0.10256410256410256, 0.7692307692307693, 0.23931623931623933]
Acc values :  [[28, 4, 13], [28, 115, 12], [78, 21, 13], [3, 21, 12], [78, 115, 77], [3, 4, 77]]
perm_tuples :  [(0, 1, 2), (0, 2, 1), (1, 0, 2), (1, 2, 0), (2, 0, 1), (2, 1, 0)]
------------------------------------------------------------
1. v_file ::  ICC WT20 Ireland v Oman Match Highlights
------------------------------------------------------------
2. v_file ::  ICC WT20 Ireland vs Oman Highlights
------------------------------------------------------------
3. v_file ::  ICC WT20 Netherlands vs Ireland Match Highlights
------------------------------------------------------------
4. v_file ::  ICC WT20 New Zealand vs Pakistan - Match Highlights
------------------------------------------------------------
5. v_file ::  ICC WT20 Scotland vs Afghanistan Highlights
Create dataframe BOVW validation set...
Make bow vector for each feature vector
Shape of bovw_dataframe : (105, 30)
Reading IDF weights to disk.
[[ 0.3873435  11.91623059 11.35912386]
 [ 0.36770982  7.30084285 13.70624191]
 [ 1.3717525   3.42850888 11.1184541 ]]
Evaluating on the validation set...
##############################
BOW Classification Results:
92/105 Correct
Accuracy = 0.8761904761904762 
Confusion matrix
[[32.  0.  0.]
 [ 2. 37.  4.]
 [ 5.  2. 23.]]
############################################################
No. of training videos : 16
Size : [4404, 4353, 4036, 4302, 4579, 4497, 4451, 4499, 5057, 4497, 4450, 4473, 4231, 4489, 5046, 4449]
nbins : 40, nClusters : 40 
Loading features from disk...
------------------------------------------------------------
1. v_file ::  ICC WT20 - Afghanistan vs South Africa - Match Highlights
------------------------------------------------------------
2. v_file ::  ICC WT20 - England v Sri Lanka Match Highlights
------------------------------------------------------------
3. v_file ::  ICC WT20 - India vs Australia Highlights
------------------------------------------------------------
4. v_file ::  ICC WT20 - India vs Pakistan Match Highlights
------------------------------------------------------------
5. v_file ::  ICC WT20 - South Africa vs England - Match Highlights
------------------------------------------------------------
6. v_file ::  ICC WT20 Afghanistan vs Zimbabwe Match Highlights
------------------------------------------------------------
7. v_file ::  ICC WT20 Australia vs Bangladesh - Match Highlights
------------------------------------------------------------
8. v_file ::  ICC WT20 Bangladesh v Ireland Match Highlights
------------------------------------------------------------
9. v_file ::  ICC WT20 Bangladesh vs Netherlands Highlights
------------------------------------------------------------
10. v_file ::  ICC WT20 Bangladesh vs Oman Match Highlights
------------------------------------------------------------
11. v_file ::  ICC WT20 England v New Zealand - Semi-Final Highlights
------------------------------------------------------------
12. v_file ::  ICC WT20 Final - England vs West Indies - Match Highlights
------------------------------------------------------------
13. v_file ::  ICC WT20 Hong Kong v Afghanistan Match Highlights
------------------------------------------------------------
14. v_file ::  ICC WT20 Hong Kong v Scotland Highlights
------------------------------------------------------------
15. v_file ::  ICC WT20 Hong Kong vs Zimbabwe Highlights
------------------------------------------------------------
16. v_file ::  ICC WT20 India vs Bangladesh - Match Highlights
INP_VEC_SIZE =  40
Clustering using KMeans: Input size -> (45630, 40) :: n_clusters -> 40
Done Clustering!
Create a dataframe for HOOF features...
Make bow vector for each feature vector
Shape of bovw_dataframe : (351, 40)
Saved IDF weights to disk.
Read 562 ground truth stroke labels from file.
Training stroke labels : 
[0 2 1 0 2 1 0 2 0 2 0 2 0 1 2 2 1 0 0 2 0 2 2 2 2 2 1 1 0 1 2 1 2 0 1 2 0
 1 2 2 0 1 1 0 1 2 1 1 0 2 1 1 2 2 2 1 0 2 2 1 0 1 2 2 0 0 1 1 0 1 0 1 1 0
 0 0 1 1 1 2 2 1 1 2 2 1 0 0 0 1 1 1 0 1 0 1 0 1 2 1 0 0 0 0 2 1 2 0 0 2 0
 2 1 1 1 1 2 0 0 1 2 1 1 1 2 1 2 1 2 1 2 1 1 2 2 1 1 2 0 1 1 2 2 1 1 0 0 1
 1 2 1 1 0 1 1 1 0 2 1 2 2 0 1 1 2 1 0 0 2 1 1 0 1 0 0 2 2 1 1 0 0 2 1 2 1
 0 0 2 2 0 0 1 0 0 1 2 2 1 2 0 1 1 0 0 2 2 1 2 0 2 0 1 0 1 0 2 0 0 2 0 2 0
 0 0 2 1 2 1 0 0 0 2 1 2 0 0 1 1 1 2 2 1 2 1 2 1 1 1 1 2 1 0 0 2 1 1 2 2 1
 0 1 1 0 1 0 0 2 1 2 2 2 1 0 1 1 1 0 0 2 1 2 1 0 0 2 1 0 2 0 0 0 1 1 0 1 0
 0 0 2 1 1 1 0 1 1 0 1 0 1 2 1 1 0 1 0 1 1 1 1 1 2 2 0 1 1 1 0 1 0 0 1 2 2
 1 0 1 0 2 1 1 2 2 2 0 2 0 2 0 1 1 2]
(351,)
............................................................................................................................................................................................................................................................................................................
optimization finished, #iter = 3000

WARNING: reaching max number of iterations
Using -s 2 may be faster (also see FAQ)

Objective value = -59.362678
nSV = 100
............................................................................................................................................................................................................................................................................................................
optimization finished, #iter = 3000

WARNING: reaching max number of iterations
Using -s 2 may be faster (also see FAQ)

Objective value = -63.965754
nSV = 125
............................................................................................................................................................................................................................................................................................................
optimization finished, #iter = 3000

WARNING: reaching max number of iterations
Using -s 2 may be faster (also see FAQ)

Objective value = -106.090238
nSV = 174
/home/arpan/opencv-py3/lib/python3.5/site-packages/sklearn/svm/base.py:931: ConvergenceWarning: Liblinear failed to converge, increase the number of iterations.
  "the number of iterations.", ConvergenceWarning)
[LibLinear]Training dataframe formed.
LDA execution !!! 
printing dictionary after corp  Dictionary(40 unique tokens: ['33', '12', '30', '8', '24']...) 
training complete saving to disk 
0 : ['0.137*"7" ', ' 0.089*"30" ', ' 0.069*"9" ', ' 0.061*"3" ', ' 0.054*"13" ', ' 0.048*"4" ', ' 0.042*"23" ', ' 0.042*"19" ', ' 0.040*"15" ', ' 0.039*"22"'] 
1 : ['0.194*"7" ', ' 0.156*"30" ', ' 0.111*"1" ', ' 0.078*"39" ', ' 0.062*"5" ', ' 0.062*"10" ', ' 0.057*"4" ', ' 0.056*"13" ', ' 0.031*"35" ', ' 0.029*"38"'] 
2 : ['0.169*"7" ', ' 0.100*"10" ', ' 0.075*"30" ', ' 0.070*"5" ', ' 0.070*"35" ', ' 0.061*"13" ', ' 0.055*"16" ', ' 0.049*"2" ', ' 0.039*"6" ', ' 0.035*"36"'] 
Training Time : topic action mapping is : 
topic0  topic1  topic2
[[ 0.         10.13016218 77.92552909]
 [81.06096491 20.8470403   4.87843689]
 [ 8.09758073 53.55038571 19.10684493]]
Max Acc. :  0.7378917378917379
Acc values :  [0.1623931623931624, 0.2022792022792023, 0.41025641025641024, 0.7378917378917379, 0.09971509971509972, 0.38746438746438744]
Acc values :  [[0, 31, 26], [0, 7, 64], [16, 102, 26], [93, 102, 64], [16, 7, 12], [93, 31, 12]]
perm_tuples :  [(0, 1, 2), (0, 2, 1), (1, 0, 2), (1, 2, 0), (2, 0, 1), (2, 1, 0)]
------------------------------------------------------------
1. v_file ::  ICC WT20 Ireland v Oman Match Highlights
------------------------------------------------------------
2. v_file ::  ICC WT20 Ireland vs Oman Highlights
------------------------------------------------------------
3. v_file ::  ICC WT20 Netherlands vs Ireland Match Highlights
------------------------------------------------------------
4. v_file ::  ICC WT20 New Zealand vs Pakistan - Match Highlights
------------------------------------------------------------
5. v_file ::  ICC WT20 Scotland vs Afghanistan Highlights
Create dataframe BOVW validation set...
Make bow vector for each feature vector
Shape of bovw_dataframe : (105, 40)
Reading IDF weights to disk.
[[18.06124976  0.          5.53562388]
 [20.66711861  0.          3.83992329]
 [12.68980095  0.          3.41690382]]
Evaluating on the validation set...
##############################
BOW Classification Results:
84/105 Correct
Accuracy = 0.8 
Confusion matrix
[[27.  1.  0.]
 [ 0. 35.  5.]
 [12.  3. 22.]]
############################################################
No. of training videos : 16
Size : [4404, 4353, 4036, 4302, 4579, 4497, 4451, 4499, 5057, 4497, 4450, 4473, 4231, 4489, 5046, 4449]
nbins : 40, nClusters : 50 
Loading features from disk...
------------------------------------------------------------
1. v_file ::  ICC WT20 - Afghanistan vs South Africa - Match Highlights
------------------------------------------------------------
2. v_file ::  ICC WT20 - England v Sri Lanka Match Highlights
------------------------------------------------------------
3. v_file ::  ICC WT20 - India vs Australia Highlights
------------------------------------------------------------
4. v_file ::  ICC WT20 - India vs Pakistan Match Highlights
------------------------------------------------------------
5. v_file ::  ICC WT20 - South Africa vs England - Match Highlights
------------------------------------------------------------
6. v_file ::  ICC WT20 Afghanistan vs Zimbabwe Match Highlights
------------------------------------------------------------
7. v_file ::  ICC WT20 Australia vs Bangladesh - Match Highlights
------------------------------------------------------------
8. v_file ::  ICC WT20 Bangladesh v Ireland Match Highlights
------------------------------------------------------------
9. v_file ::  ICC WT20 Bangladesh vs Netherlands Highlights
------------------------------------------------------------
10. v_file ::  ICC WT20 Bangladesh vs Oman Match Highlights
------------------------------------------------------------
11. v_file ::  ICC WT20 England v New Zealand - Semi-Final Highlights
------------------------------------------------------------
12. v_file ::  ICC WT20 Final - England vs West Indies - Match Highlights
------------------------------------------------------------
13. v_file ::  ICC WT20 Hong Kong v Afghanistan Match Highlights
------------------------------------------------------------
14. v_file ::  ICC WT20 Hong Kong v Scotland Highlights
------------------------------------------------------------
15. v_file ::  ICC WT20 Hong Kong vs Zimbabwe Highlights
------------------------------------------------------------
16. v_file ::  ICC WT20 India vs Bangladesh - Match Highlights
INP_VEC_SIZE =  40
Clustering using KMeans: Input size -> (45630, 40) :: n_clusters -> 50
Done Clustering!
Create a dataframe for HOOF features...
Make bow vector for each feature vector
Shape of bovw_dataframe : (351, 50)
Saved IDF weights to disk.
Read 562 ground truth stroke labels from file.
Training stroke labels : 
[0 2 1 0 2 1 0 2 0 2 0 2 0 1 2 2 1 0 0 2 0 2 2 2 2 2 1 1 0 1 2 1 2 0 1 2 0
 1 2 2 0 1 1 0 1 2 1 1 0 2 1 1 2 2 2 1 0 2 2 1 0 1 2 2 0 0 1 1 0 1 0 1 1 0
 0 0 1 1 1 2 2 1 1 2 2 1 0 0 0 1 1 1 0 1 0 1 0 1 2 1 0 0 0 0 2 1 2 0 0 2 0
 2 1 1 1 1 2 0 0 1 2 1 1 1 2 1 2 1 2 1 2 1 1 2 2 1 1 2 0 1 1 2 2 1 1 0 0 1
 1 2 1 1 0 1 1 1 0 2 1 2 2 0 1 1 2 1 0 0 2 1 1 0 1 0 0 2 2 1 1 0 0 2 1 2 1
 0 0 2 2 0 0 1 0 0 1 2 2 1 2 0 1 1 0 0 2 2 1 2 0 2 0 1 0 1 0 2 0 0 2 0 2 0
 0 0 2 1 2 1 0 0 0 2 1 2 0 0 1 1 1 2 2 1 2 1 2 1 1 1 1 2 1 0 0 2 1 1 2 2 1
 0 1 1 0 1 0 0 2 1 2 2 2 1 0 1 1 1 0 0 2 1 2 1 0 0 2 1 0 2 0 0 0 1 1 0 1 0
 0 0 2 1 1 1 0 1 1 0 1 0 1 2 1 1 0 1 0 1 1 1 1 1 2 2 0 1 1 1 0 1 0 0 1 2 2
 1 0 1 0 2 1 1 2 2 2 0 2 0 2 0 1 1 2]
(351,)
............................................................................................................................................................................................................................................................................................................
optimization finished, #iter = 3000

WARNING: reaching max number of iterations
Using -s 2 may be faster (also see FAQ)

Objective value = -40.517921
nSV = 77
............................................................................................................................................................................................................................................................................................................
optimization finished, #iter = 3000

WARNING: reaching max number of iterations
Using -s 2 may be faster (also see FAQ)

Objective value = -57.522575
nSV = 104
............................................................................................................................................................................................................................................................................................................
optimization finished, #iter = 3000

WARNING: reaching max number of iterations
Using -s 2 may be faster (also see FAQ)

Objective value = -99.104353
nSV = 168
/home/arpan/opencv-py3/lib/python3.5/site-packages/sklearn/svm/base.py:931: ConvergenceWarning: Liblinear failed to converge, increase the number of iterations.
  "the number of iterations.", ConvergenceWarning)
[LibLinear]Training dataframe formed.
LDA execution !!! 
printing dictionary after corp  Dictionary(50 unique tokens: ['45', '22', '5', '32', '47']...) 
training complete saving to disk 
0 : ['0.120*"43" ', ' 0.108*"13" ', ' 0.079*"16" ', ' 0.064*"35" ', ' 0.059*"32" ', ' 0.055*"2" ', ' 0.048*"1" ', ' 0.040*"44" ', ' 0.039*"36" ', ' 0.035*"45"'] 
1 : ['0.159*"43" ', ' 0.133*"16" ', ' 0.123*"1" ', ' 0.066*"13" ', ' 0.059*"47" ', ' 0.059*"36" ', ' 0.053*"33" ', ' 0.037*"19" ', ' 0.036*"2" ', ' 0.034*"21"'] 
2 : ['0.104*"43" ', ' 0.083*"13" ', ' 0.062*"16" ', ' 0.053*"33" ', ' 0.050*"1" ', ' 0.049*"10" ', ' 0.047*"14" ', ' 0.046*"26" ', ' 0.046*"8" ', ' 0.043*"3"'] 
Training Time : topic action mapping is : 
topic0  topic1  topic2
[[86.62706318  3.76749724  1.12800258]
 [ 4.98533916 16.75195825 89.03417587]
 [19.94985569 53.49053353  5.83462831]]
Max Acc. :  0.7806267806267806
Acc values :  [0.38461538461538464, 0.7806267806267806, 0.06837606837606838, 0.2222222222222222, 0.39316239316239315, 0.150997150997151]
Acc values :  [[100, 26, 9], [100, 106, 68], [7, 8, 9], [2, 8, 68], [7, 106, 25], [2, 26, 25]]
perm_tuples :  [(0, 1, 2), (0, 2, 1), (1, 0, 2), (1, 2, 0), (2, 0, 1), (2, 1, 0)]
------------------------------------------------------------
1. v_file ::  ICC WT20 Ireland v Oman Match Highlights
------------------------------------------------------------
2. v_file ::  ICC WT20 Ireland vs Oman Highlights
------------------------------------------------------------
3. v_file ::  ICC WT20 Netherlands vs Ireland Match Highlights
------------------------------------------------------------
4. v_file ::  ICC WT20 New Zealand vs Pakistan - Match Highlights
------------------------------------------------------------
5. v_file ::  ICC WT20 Scotland vs Afghanistan Highlights
Create dataframe BOVW validation set...
Make bow vector for each feature vector
Shape of bovw_dataframe : (105, 50)
Reading IDF weights to disk.
[[12.51535597  4.76355356  3.63217869]
 [11.65491876  4.20352519  4.47664675]
 [13.05940312  2.08626306  0.55339956]]
Evaluating on the validation set...
##############################
BOW Classification Results:
81/105 Correct
Accuracy = 0.7714285714285715 
Confusion matrix
[[29.  2.  0.]
 [ 0. 30.  5.]
 [10.  7. 22.]]





For Test set 

############################################################
No. of training videos : 16
Size : [4404, 4353, 4036, 4302, 4579, 4497, 4451, 4499, 5057, 4497, 4450, 4473, 4231, 4489, 5046, 4449]
nbins : 10, nClusters : 20 
Loading features from disk...
------------------------------------------------------------
1. v_file ::  ICC WT20 - Afghanistan vs South Africa - Match Highlights
------------------------------------------------------------
2. v_file ::  ICC WT20 - England v Sri Lanka Match Highlights
------------------------------------------------------------
3. v_file ::  ICC WT20 - India vs Australia Highlights
------------------------------------------------------------
4. v_file ::  ICC WT20 - India vs Pakistan Match Highlights
------------------------------------------------------------
5. v_file ::  ICC WT20 - South Africa vs England - Match Highlights
------------------------------------------------------------
6. v_file ::  ICC WT20 Afghanistan vs Zimbabwe Match Highlights
------------------------------------------------------------
7. v_file ::  ICC WT20 Australia vs Bangladesh - Match Highlights
------------------------------------------------------------
8. v_file ::  ICC WT20 Bangladesh v Ireland Match Highlights
------------------------------------------------------------
9. v_file ::  ICC WT20 Bangladesh vs Netherlands Highlights
------------------------------------------------------------
10. v_file ::  ICC WT20 Bangladesh vs Oman Match Highlights
------------------------------------------------------------
11. v_file ::  ICC WT20 England v New Zealand - Semi-Final Highlights
------------------------------------------------------------
12. v_file ::  ICC WT20 Final - England vs West Indies - Match Highlights
------------------------------------------------------------
13. v_file ::  ICC WT20 Hong Kong v Afghanistan Match Highlights
------------------------------------------------------------
14. v_file ::  ICC WT20 Hong Kong v Scotland Highlights
------------------------------------------------------------
15. v_file ::  ICC WT20 Hong Kong vs Zimbabwe Highlights
------------------------------------------------------------
16. v_file ::  ICC WT20 India vs Bangladesh - Match Highlights
INP_VEC_SIZE =  10
Clustering using KMeans: Input size -> (45630, 10) :: n_clusters -> 20
Done Clustering!
Create a dataframe for HOOF features...
Make bow vector for each feature vector
Shape of bovw_dataframe : (351, 20)
Saved IDF weights to disk.
Read 562 ground truth stroke labels from file.
Training stroke labels : 
[0 2 1 0 2 1 0 2 0 2 0 2 0 1 2 2 1 0 0 2 0 2 2 2 2 2 1 1 0 1 2 1 2 0 1 2 0
 1 2 2 0 1 1 0 1 2 1 1 0 2 1 1 2 2 2 1 0 2 2 1 0 1 2 2 0 0 1 1 0 1 0 1 1 0
 0 0 1 1 1 2 2 1 1 2 2 1 0 0 0 1 1 1 0 1 0 1 0 1 2 1 0 0 0 0 2 1 2 0 0 2 0
 2 1 1 1 1 2 0 0 1 2 1 1 1 2 1 2 1 2 1 2 1 1 2 2 1 1 2 0 1 1 2 2 1 1 0 0 1
 1 2 1 1 0 1 1 1 0 2 1 2 2 0 1 1 2 1 0 0 2 1 1 0 1 0 0 2 2 1 1 0 0 2 1 2 1
 0 0 2 2 0 0 1 0 0 1 2 2 1 2 0 1 1 0 0 2 2 1 2 0 2 0 1 0 1 0 2 0 0 2 0 2 0
 0 0 2 1 2 1 0 0 0 2 1 2 0 0 1 1 1 2 2 1 2 1 2 1 1 1 1 2 1 0 0 2 1 1 2 2 1
 0 1 1 0 1 0 0 2 1 2 2 2 1 0 1 1 1 0 0 2 1 2 1 0 0 2 1 0 2 0 0 0 1 1 0 1 0
 0 0 2 1 1 1 0 1 1 0 1 0 1 2 1 1 0 1 0 1 1 1 1 1 2 2 0 1 1 1 0 1 0 0 1 2 2
 1 0 1 0 2 1 1 2 2 2 0 2 0 2 0 1 1 2]
(351,)
............................................................................................................................................................................................................................................................................................................
optimization finished, #iter = 3000

WARNING: reaching max number of iterations
Using -s 2 may be faster (also see FAQ)

Objective value = -84.504609
nSV = 136
............................................................................................................................................................................................................................................................................................................
optimization finished, #iter = 3000

WARNING: reaching max number of iterations
Using -s 2 may be faster (also see FAQ)

Objective value = -76.536221
nSV = 132
............................................................................................................................................................................................................................................................................................................
optimization finished, #iter = 3000

WARNING: reaching max number of iterations
Using -s 2 may be faster (also see FAQ)

Objective value = -110.756549
nSV = 172
/home/arpan/opencv-py3/lib/python3.5/site-packages/sklearn/svm/base.py:931: ConvergenceWarning: Liblinear failed to converge, increase the number of iterations.
  "the number of iterations.", ConvergenceWarning)
[LibLinear]Training dataframe formed.
LDA execution !!! 
printing dictionary after corp  Dictionary(20 unique tokens: ['7', '10', '16', '0', '17']...) 
training complete saving to disk 
0 : ['0.142*"3" ', ' 0.132*"0" ', ' 0.128*"17" ', ' 0.102*"11" ', ' 0.090*"18" ', ' 0.083*"6" ', ' 0.074*"19" ', ' 0.054*"12" ', ' 0.052*"7" ', ' 0.028*"13"'] 
1 : ['0.174*"9" ', ' 0.130*"4" ', ' 0.105*"17" ', ' 0.091*"3" ', ' 0.082*"19" ', ' 0.076*"0" ', ' 0.065*"6" ', ' 0.059*"7" ', ' 0.054*"15" ', ' 0.038*"14"'] 
2 : ['0.186*"8" ', ' 0.137*"5" ', ' 0.116*"17" ', ' 0.080*"2" ', ' 0.072*"3" ', ' 0.069*"16" ', ' 0.065*"13" ', ' 0.060*"0" ', ' 0.060*"10" ', ' 0.046*"1"'] 
Training Time : topic action mapping is : 
topic0  topic1  topic2
[[16.93767992 69.40479872  0.63767076]
 [10.27141723  3.41959858 96.94115475]
 [58.96771175  7.32632741 13.11872774]]
Max Acc. :  0.7720797720797721
Acc values :  [0.1452991452991453, 0.45014245014245013, 0.33048433048433046, 0.08262108262108261, 0.7720797720797721, 0.21937321937321938]
Acc values :  [[27, 5, 19], [27, 119, 12], [81, 16, 19], [1, 16, 12], [81, 119, 71], [1, 5, 71]]
perm_tuples :  [(0, 1, 2), (0, 2, 1), (1, 0, 2), (1, 2, 0), (2, 0, 1), (2, 1, 0)]
------------------------------------------------------------
1. v_file ::  ICC WT20 Scotland vs Zimbabwe Highlights
------------------------------------------------------------
2. v_file ::  ICC WT20 South Africa v Sri Lanka - Match Highlights
------------------------------------------------------------
3. v_file ::  ICC WT20 South Africa vs West Indies - Match Highlights
------------------------------------------------------------
4. v_file ::  ICC WT20 Sri Lanka v Afghanistan Cricket Match Highlights
------------------------------------------------------------
5. v_file ::  ICC WT20 West Indies v India - Semi-Final Highlights
Create dataframe BOVW validation set...
Make bow vector for each feature vector
Shape of bovw_dataframe : (106, 20)
Reading IDF weights to disk.
[[ 6.38374484  6.52971193  3.29630026]
 [ 6.9917115   0.         22.32357621]
 [ 8.79641616  2.73347726  7.97986653]]
Evaluating on the validation set...
##############################
BOW Classification Results:
91/106 Correct
Accuracy = 0.8584905660377359 
Confusion matrix
[[20.  0.  2.]
 [ 2. 41.  0.]
 [ 7.  4. 30.]]
